ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"as5600.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.AS5600_WriteReg,"ax",%progbits
  16              		.align	1
  17              		.global	AS5600_WriteReg
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	AS5600_WriteReg:
  25              	.LVL0:
  26              	.LFB66:
  27              		.file 1 "Src/as5600.c"
   1:Src/as5600.c  **** 
   2:Src/as5600.c  **** 
   3:Src/as5600.c  **** #include "stm32f1xx_hal.h"
   4:Src/as5600.c  **** #include "as5600.h"
   5:Src/as5600.c  **** 
   6:Src/as5600.c  **** extern I2C_HandleTypeDef hi2c2;
   7:Src/as5600.c  **** 
   8:Src/as5600.c  **** Encoder_t enc;
   9:Src/as5600.c  **** 
  10:Src/as5600.c  **** void AS5600_SetZero()
  11:Src/as5600.c  **** {
  12:Src/as5600.c  ****   enc.offset = AS5600_GetRawAngle();
  13:Src/as5600.c  **** }
  14:Src/as5600.c  **** 
  15:Src/as5600.c  **** void AS5600_WriteReg(uint8_t Reg, uint8_t Data)
  16:Src/as5600.c  **** {
  28              		.loc 1 16 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		.loc 1 16 1 is_stmt 0 view .LVU1
  33 0000 70B5     		push	{r4, r5, r6, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 16
  36              		.cfi_offset 4, -16
  37              		.cfi_offset 5, -12
  38              		.cfi_offset 6, -8
  39              		.cfi_offset 14, -4
  40 0002 86B0     		sub	sp, sp, #24
  41              	.LCFI1:
  42              		.cfi_def_cfa_offset 40
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s 			page 2


  43 0004 0446     		mov	r4, r0
  44 0006 8DF81710 		strb	r1, [sp, #23]
  17:Src/as5600.c  **** 	HAL_I2C_Master_Transmit(&hi2c2,AS5600_ADDR,&Data,1,10);	
  45              		.loc 1 17 2 is_stmt 1 view .LVU2
  46 000a 0DF11706 		add	r6, sp, #23
  47 000e 0A4D     		ldr	r5, .L3
  48 0010 0A23     		movs	r3, #10
  49 0012 0093     		str	r3, [sp]
  50 0014 0123     		movs	r3, #1
  51 0016 3246     		mov	r2, r6
  52 0018 3621     		movs	r1, #54
  53              	.LVL1:
  54              		.loc 1 17 2 is_stmt 0 view .LVU3
  55 001a 2846     		mov	r0, r5
  56              	.LVL2:
  57              		.loc 1 17 2 view .LVU4
  58 001c FFF7FEFF 		bl	HAL_I2C_Master_Transmit
  59              	.LVL3:
  18:Src/as5600.c  **** 	HAL_I2C_Mem_Write(&hi2c2,(AS5600_ADDR << 1),Reg,1,&Data,1,100);
  60              		.loc 1 18 2 is_stmt 1 view .LVU5
  61 0020 6423     		movs	r3, #100
  62 0022 0293     		str	r3, [sp, #8]
  63 0024 0123     		movs	r3, #1
  64 0026 0193     		str	r3, [sp, #4]
  65 0028 0096     		str	r6, [sp]
  66 002a 2246     		mov	r2, r4
  67 002c 6C21     		movs	r1, #108
  68 002e 2846     		mov	r0, r5
  69 0030 FFF7FEFF 		bl	HAL_I2C_Mem_Write
  70              	.LVL4:
  19:Src/as5600.c  **** }
  71              		.loc 1 19 1 is_stmt 0 view .LVU6
  72 0034 06B0     		add	sp, sp, #24
  73              	.LCFI2:
  74              		.cfi_def_cfa_offset 16
  75              		@ sp needed
  76 0036 70BD     		pop	{r4, r5, r6, pc}
  77              	.L4:
  78              		.align	2
  79              	.L3:
  80 0038 00000000 		.word	hi2c2
  81              		.cfi_endproc
  82              	.LFE66:
  84              		.section	.text.AS5600_ReadReg,"ax",%progbits
  85              		.align	1
  86              		.global	AS5600_ReadReg
  87              		.syntax unified
  88              		.thumb
  89              		.thumb_func
  90              		.fpu softvfp
  92              	AS5600_ReadReg:
  93              	.LVL5:
  94              	.LFB67:
  20:Src/as5600.c  **** 
  21:Src/as5600.c  **** uint8_t AS5600_ReadReg(uint8_t Reg)
  22:Src/as5600.c  **** {
  95              		.loc 1 22 1 is_stmt 1 view -0
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s 			page 3


  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 8
  98              		@ frame_needed = 0, uses_anonymous_args = 0
  99              		.loc 1 22 1 is_stmt 0 view .LVU8
 100 0000 00B5     		push	{lr}
 101              	.LCFI3:
 102              		.cfi_def_cfa_offset 4
 103              		.cfi_offset 14, -4
 104 0002 87B0     		sub	sp, sp, #28
 105              	.LCFI4:
 106              		.cfi_def_cfa_offset 32
 107 0004 0246     		mov	r2, r0
  23:Src/as5600.c  **** 	uint8_t DataRead=0;	
 108              		.loc 1 23 2 is_stmt 1 view .LVU9
 109              		.loc 1 23 10 is_stmt 0 view .LVU10
 110 0006 0023     		movs	r3, #0
 111 0008 8DF81730 		strb	r3, [sp, #23]
  24:Src/as5600.c  **** 	HAL_I2C_Mem_Read(&hi2c2,(AS5600_ADDR << 1),Reg,1,&DataRead,1,100);
 112              		.loc 1 24 2 is_stmt 1 view .LVU11
 113 000c 6423     		movs	r3, #100
 114 000e 0293     		str	r3, [sp, #8]
 115 0010 0123     		movs	r3, #1
 116 0012 0193     		str	r3, [sp, #4]
 117 0014 0DF11701 		add	r1, sp, #23
 118 0018 0091     		str	r1, [sp]
 119 001a 6C21     		movs	r1, #108
 120 001c 0348     		ldr	r0, .L7
 121              	.LVL6:
 122              		.loc 1 24 2 is_stmt 0 view .LVU12
 123 001e FFF7FEFF 		bl	HAL_I2C_Mem_Read
 124              	.LVL7:
  25:Src/as5600.c  **** 	
  26:Src/as5600.c  **** 	
  27:Src/as5600.c  **** 	return DataRead;
 125              		.loc 1 27 2 is_stmt 1 view .LVU13
  28:Src/as5600.c  **** }
 126              		.loc 1 28 1 is_stmt 0 view .LVU14
 127 0022 9DF81700 		ldrb	r0, [sp, #23]	@ zero_extendqisi2
 128 0026 07B0     		add	sp, sp, #28
 129              	.LCFI5:
 130              		.cfi_def_cfa_offset 4
 131              		@ sp needed
 132 0028 5DF804FB 		ldr	pc, [sp], #4
 133              	.L8:
 134              		.align	2
 135              	.L7:
 136 002c 00000000 		.word	hi2c2
 137              		.cfi_endproc
 138              	.LFE67:
 140              		.global	__aeabi_i2f
 141              		.global	__aeabi_fmul
 142              		.global	__aeabi_f2uiz
 143              		.section	.text.AS5600_GetAngle,"ax",%progbits
 144              		.align	1
 145              		.global	AS5600_GetAngle
 146              		.syntax unified
 147              		.thumb
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s 			page 4


 148              		.thumb_func
 149              		.fpu softvfp
 151              	AS5600_GetAngle:
 152              	.LFB69:
  29:Src/as5600.c  **** 
  30:Src/as5600.c  **** uint16_t AS5600_GetCalAngle()
  31:Src/as5600.c  **** {
  32:Src/as5600.c  ****   uint16_t uncal_angle = AS5600_GetRawAngle();
  33:Src/as5600.c  ****   if(uncal_angle < enc.offset){
  34:Src/as5600.c  ****     uncal_angle += 4096;
  35:Src/as5600.c  ****   }
  36:Src/as5600.c  ****   return uncal_angle - enc.offset;
  37:Src/as5600.c  **** 
  38:Src/as5600.c  **** }
  39:Src/as5600.c  **** 
  40:Src/as5600.c  **** uint16_t AS5600_GetAngle()
  41:Src/as5600.c  **** {
 153              		.loc 1 41 1 is_stmt 1 view -0
 154              		.cfi_startproc
 155              		@ args = 0, pretend = 0, frame = 8
 156              		@ frame_needed = 0, uses_anonymous_args = 0
 157 0000 10B5     		push	{r4, lr}
 158              	.LCFI6:
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 4, -8
 161              		.cfi_offset 14, -4
 162 0002 82B0     		sub	sp, sp, #8
 163              	.LCFI7:
 164              		.cfi_def_cfa_offset 16
  42:Src/as5600.c  **** 	volatile uint16_t angle = (uint32_t)((float)(AS5600_ReadReg(ANGLE_L) + (AS5600_ReadReg(ANGLE_H) <<
 165              		.loc 1 42 2 view .LVU16
 166              		.loc 1 42 47 is_stmt 0 view .LVU17
 167 0004 0F20     		movs	r0, #15
 168 0006 FFF7FEFF 		bl	AS5600_ReadReg
 169              	.LVL8:
 170 000a 0446     		mov	r4, r0
 171              		.loc 1 42 74 view .LVU18
 172 000c 0E20     		movs	r0, #14
 173 000e FFF7FEFF 		bl	AS5600_ReadReg
 174              	.LVL9:
 175              		.loc 1 42 39 view .LVU19
 176 0012 04EB0020 		add	r0, r4, r0, lsl #8
 177 0016 FFF7FEFF 		bl	__aeabi_i2f
 178              	.LVL10:
 179              		.loc 1 42 104 view .LVU20
 180 001a 4FF06651 		mov	r1, #964689920
 181 001e FFF7FEFF 		bl	__aeabi_fmul
 182              	.LVL11:
 183              		.loc 1 42 109 view .LVU21
 184 0022 0649     		ldr	r1, .L11
 185 0024 FFF7FEFF 		bl	__aeabi_fmul
 186              	.LVL12:
 187              		.loc 1 42 28 view .LVU22
 188 0028 FFF7FEFF 		bl	__aeabi_f2uiz
 189              	.LVL13:
 190              		.loc 1 42 20 view .LVU23
 191 002c 80B2     		uxth	r0, r0
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s 			page 5


 192 002e ADF80600 		strh	r0, [sp, #6]	@ movhi
  43:Src/as5600.c  **** 	return angle;
 193              		.loc 1 43 2 is_stmt 1 view .LVU24
 194              		.loc 1 43 9 is_stmt 0 view .LVU25
 195 0032 BDF80600 		ldrh	r0, [sp, #6]
  44:Src/as5600.c  **** }
 196              		.loc 1 44 1 view .LVU26
 197 0036 80B2     		uxth	r0, r0
 198 0038 02B0     		add	sp, sp, #8
 199              	.LCFI8:
 200              		.cfi_def_cfa_offset 8
 201              		@ sp needed
 202 003a 10BD     		pop	{r4, pc}
 203              	.L12:
 204              		.align	2
 205              	.L11:
 206 003c 0000B443 		.word	1135869952
 207              		.cfi_endproc
 208              	.LFE69:
 210              		.section	.text.AS5600_GetRawAngle,"ax",%progbits
 211              		.align	1
 212              		.global	AS5600_GetRawAngle
 213              		.syntax unified
 214              		.thumb
 215              		.thumb_func
 216              		.fpu softvfp
 218              	AS5600_GetRawAngle:
 219              	.LFB70:
  45:Src/as5600.c  **** 
  46:Src/as5600.c  **** uint16_t AS5600_GetRawAngle()
  47:Src/as5600.c  **** {
 220              		.loc 1 47 1 is_stmt 1 view -0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224 0000 10B5     		push	{r4, lr}
 225              	.LCFI9:
 226              		.cfi_def_cfa_offset 8
 227              		.cfi_offset 4, -8
 228              		.cfi_offset 14, -4
  48:Src/as5600.c  **** 	uint16_t AngleVal=AS5600_ReadReg(RAWANG_L) + (AS5600_ReadReg(RAWANG_H) << 8);
 229              		.loc 1 48 2 view .LVU28
 230              		.loc 1 48 20 is_stmt 0 view .LVU29
 231 0002 0D20     		movs	r0, #13
 232 0004 FFF7FEFF 		bl	AS5600_ReadReg
 233              	.LVL14:
 234 0008 84B2     		uxth	r4, r0
 235              		.loc 1 48 48 view .LVU30
 236 000a 0C20     		movs	r0, #12
 237 000c FFF7FEFF 		bl	AS5600_ReadReg
 238              	.LVL15:
 239 0010 80B2     		uxth	r0, r0
 240              		.loc 1 48 73 view .LVU31
 241 0012 0002     		lsls	r0, r0, #8
 242 0014 80B2     		uxth	r0, r0
 243              		.loc 1 48 11 view .LVU32
 244 0016 2044     		add	r0, r0, r4
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s 			page 6


 245              	.LVL16:
  49:Src/as5600.c  **** 	return AngleVal;	
 246              		.loc 1 49 2 is_stmt 1 view .LVU33
  50:Src/as5600.c  **** }
 247              		.loc 1 50 1 is_stmt 0 view .LVU34
 248 0018 80B2     		uxth	r0, r0
 249              		.loc 1 50 1 view .LVU35
 250 001a 10BD     		pop	{r4, pc}
 251              		.cfi_endproc
 252              	.LFE70:
 254              		.section	.text.AS5600_SetZero,"ax",%progbits
 255              		.align	1
 256              		.global	AS5600_SetZero
 257              		.syntax unified
 258              		.thumb
 259              		.thumb_func
 260              		.fpu softvfp
 262              	AS5600_SetZero:
 263              	.LFB65:
  11:Src/as5600.c  ****   enc.offset = AS5600_GetRawAngle();
 264              		.loc 1 11 1 is_stmt 1 view -0
 265              		.cfi_startproc
 266              		@ args = 0, pretend = 0, frame = 0
 267              		@ frame_needed = 0, uses_anonymous_args = 0
 268 0000 08B5     		push	{r3, lr}
 269              	.LCFI10:
 270              		.cfi_def_cfa_offset 8
 271              		.cfi_offset 3, -8
 272              		.cfi_offset 14, -4
  12:Src/as5600.c  **** }
 273              		.loc 1 12 3 view .LVU37
  12:Src/as5600.c  **** }
 274              		.loc 1 12 16 is_stmt 0 view .LVU38
 275 0002 FFF7FEFF 		bl	AS5600_GetRawAngle
 276              	.LVL17:
  12:Src/as5600.c  **** }
 277              		.loc 1 12 14 view .LVU39
 278 0006 014B     		ldr	r3, .L17
 279 0008 1880     		strh	r0, [r3]	@ movhi
  13:Src/as5600.c  **** 
 280              		.loc 1 13 1 view .LVU40
 281 000a 08BD     		pop	{r3, pc}
 282              	.L18:
 283              		.align	2
 284              	.L17:
 285 000c 00000000 		.word	enc
 286              		.cfi_endproc
 287              	.LFE65:
 289              		.section	.text.AS5600_GetCalAngle,"ax",%progbits
 290              		.align	1
 291              		.global	AS5600_GetCalAngle
 292              		.syntax unified
 293              		.thumb
 294              		.thumb_func
 295              		.fpu softvfp
 297              	AS5600_GetCalAngle:
 298              	.LFB68:
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s 			page 7


  31:Src/as5600.c  ****   uint16_t uncal_angle = AS5600_GetRawAngle();
 299              		.loc 1 31 1 is_stmt 1 view -0
 300              		.cfi_startproc
 301              		@ args = 0, pretend = 0, frame = 0
 302              		@ frame_needed = 0, uses_anonymous_args = 0
 303 0000 08B5     		push	{r3, lr}
 304              	.LCFI11:
 305              		.cfi_def_cfa_offset 8
 306              		.cfi_offset 3, -8
 307              		.cfi_offset 14, -4
  32:Src/as5600.c  ****   if(uncal_angle < enc.offset){
 308              		.loc 1 32 3 view .LVU42
  32:Src/as5600.c  ****   if(uncal_angle < enc.offset){
 309              		.loc 1 32 26 is_stmt 0 view .LVU43
 310 0002 FFF7FEFF 		bl	AS5600_GetRawAngle
 311              	.LVL18:
  33:Src/as5600.c  ****     uncal_angle += 4096;
 312              		.loc 1 33 3 is_stmt 1 view .LVU44
  33:Src/as5600.c  ****     uncal_angle += 4096;
 313              		.loc 1 33 23 is_stmt 0 view .LVU45
 314 0006 054B     		ldr	r3, .L22
 315 0008 1B88     		ldrh	r3, [r3]
  33:Src/as5600.c  ****     uncal_angle += 4096;
 316              		.loc 1 33 5 view .LVU46
 317 000a 8342     		cmp	r3, r0
 318 000c 02D9     		bls	.L20
  34:Src/as5600.c  ****   }
 319              		.loc 1 34 5 is_stmt 1 view .LVU47
  34:Src/as5600.c  ****   }
 320              		.loc 1 34 17 is_stmt 0 view .LVU48
 321 000e 00F58050 		add	r0, r0, #4096
 322              	.LVL19:
  34:Src/as5600.c  ****   }
 323              		.loc 1 34 17 view .LVU49
 324 0012 80B2     		uxth	r0, r0
 325              	.LVL20:
 326              	.L20:
  36:Src/as5600.c  **** 
 327              		.loc 1 36 3 is_stmt 1 view .LVU50
  36:Src/as5600.c  **** 
 328              		.loc 1 36 22 is_stmt 0 view .LVU51
 329 0014 C01A     		subs	r0, r0, r3
 330              	.LVL21:
  38:Src/as5600.c  **** 
 331              		.loc 1 38 1 view .LVU52
 332 0016 80B2     		uxth	r0, r0
 333 0018 08BD     		pop	{r3, pc}
 334              	.L23:
 335 001a 00BF     		.align	2
 336              	.L22:
 337 001c 00000000 		.word	enc
 338              		.cfi_endproc
 339              	.LFE68:
 341              		.section	.text.AS5600_GetStatus,"ax",%progbits
 342              		.align	1
 343              		.global	AS5600_GetStatus
 344              		.syntax unified
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s 			page 8


 345              		.thumb
 346              		.thumb_func
 347              		.fpu softvfp
 349              	AS5600_GetStatus:
 350              	.LFB71:
  51:Src/as5600.c  **** 
  52:Src/as5600.c  **** uint8_t AS5600_GetStatus()
  53:Src/as5600.c  **** {
 351              		.loc 1 53 1 is_stmt 1 view -0
 352              		.cfi_startproc
 353              		@ args = 0, pretend = 0, frame = 0
 354              		@ frame_needed = 0, uses_anonymous_args = 0
 355 0000 08B5     		push	{r3, lr}
 356              	.LCFI12:
 357              		.cfi_def_cfa_offset 8
 358              		.cfi_offset 3, -8
 359              		.cfi_offset 14, -4
  54:Src/as5600.c  **** 	return AS5600_ReadReg(STATUS) & 0x38;	
 360              		.loc 1 54 2 view .LVU54
 361              		.loc 1 54 9 is_stmt 0 view .LVU55
 362 0002 0B20     		movs	r0, #11
 363 0004 FFF7FEFF 		bl	AS5600_ReadReg
 364              	.LVL22:
  55:Src/as5600.c  **** }
 365              		.loc 1 55 1 view .LVU56
 366 0008 00F03800 		and	r0, r0, #56
 367 000c 08BD     		pop	{r3, pc}
 368              		.cfi_endproc
 369              	.LFE71:
 371              		.section	.text.AS5600_SetHystheresis,"ax",%progbits
 372              		.align	1
 373              		.global	AS5600_SetHystheresis
 374              		.syntax unified
 375              		.thumb
 376              		.thumb_func
 377              		.fpu softvfp
 379              	AS5600_SetHystheresis:
 380              	.LVL23:
 381              	.LFB72:
  56:Src/as5600.c  **** 
  57:Src/as5600.c  **** void AS5600_SetHystheresis(uint8_t Hyst)
  58:Src/as5600.c  **** {
 382              		.loc 1 58 1 is_stmt 1 view -0
 383              		.cfi_startproc
 384              		@ args = 0, pretend = 0, frame = 0
 385              		@ frame_needed = 0, uses_anonymous_args = 0
 386              		.loc 1 58 1 is_stmt 0 view .LVU58
 387 0000 10B5     		push	{r4, lr}
 388              	.LCFI13:
 389              		.cfi_def_cfa_offset 8
 390              		.cfi_offset 4, -8
 391              		.cfi_offset 14, -4
 392 0002 0446     		mov	r4, r0
  59:Src/as5600.c  **** 	uint8_t TmpConfHigh=AS5600_ReadReg(CONF_H);
 393              		.loc 1 59 2 is_stmt 1 view .LVU59
 394              		.loc 1 59 22 is_stmt 0 view .LVU60
 395 0004 0820     		movs	r0, #8
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s 			page 9


 396              	.LVL24:
 397              		.loc 1 59 22 view .LVU61
 398 0006 FFF7FEFF 		bl	AS5600_ReadReg
 399              	.LVL25:
  60:Src/as5600.c  **** 	TmpConfHigh |= (HYST_MASK & Hyst);	
 400              		.loc 1 60 2 is_stmt 1 view .LVU62
 401              		.loc 1 60 14 is_stmt 0 view .LVU63
 402 000a 04F00C04 		and	r4, r4, #12
 403 000e 0443     		orrs	r4, r4, r0
 404              	.LVL26:
  61:Src/as5600.c  **** 	AS5600_WriteReg(CONF_H,TmpConfHigh);
 405              		.loc 1 61 2 is_stmt 1 view .LVU64
 406 0010 E1B2     		uxtb	r1, r4
 407 0012 0820     		movs	r0, #8
 408 0014 FFF7FEFF 		bl	AS5600_WriteReg
 409              	.LVL27:
  62:Src/as5600.c  **** }
 410              		.loc 1 62 1 is_stmt 0 view .LVU65
 411 0018 10BD     		pop	{r4, pc}
 412              		.loc 1 62 1 view .LVU66
 413              		.cfi_endproc
 414              	.LFE72:
 416              		.section	.text.AS5600_SetOutputStage,"ax",%progbits
 417              		.align	1
 418              		.global	AS5600_SetOutputStage
 419              		.syntax unified
 420              		.thumb
 421              		.thumb_func
 422              		.fpu softvfp
 424              	AS5600_SetOutputStage:
 425              	.LVL28:
 426              	.LFB73:
  63:Src/as5600.c  **** 
  64:Src/as5600.c  **** void AS5600_SetOutputStage(uint8_t OutStage)
  65:Src/as5600.c  **** {
 427              		.loc 1 65 1 is_stmt 1 view -0
 428              		.cfi_startproc
 429              		@ args = 0, pretend = 0, frame = 0
 430              		@ frame_needed = 0, uses_anonymous_args = 0
 431              		.loc 1 65 1 is_stmt 0 view .LVU68
 432 0000 10B5     		push	{r4, lr}
 433              	.LCFI14:
 434              		.cfi_def_cfa_offset 8
 435              		.cfi_offset 4, -8
 436              		.cfi_offset 14, -4
 437 0002 0446     		mov	r4, r0
  66:Src/as5600.c  **** 	uint8_t TmpConfHigh=AS5600_ReadReg(CONF_H);
 438              		.loc 1 66 2 is_stmt 1 view .LVU69
 439              		.loc 1 66 22 is_stmt 0 view .LVU70
 440 0004 0820     		movs	r0, #8
 441              	.LVL29:
 442              		.loc 1 66 22 view .LVU71
 443 0006 FFF7FEFF 		bl	AS5600_ReadReg
 444              	.LVL30:
  67:Src/as5600.c  **** 	TmpConfHigh |= (OUT_STG_MASK & OutStage);
 445              		.loc 1 67 2 is_stmt 1 view .LVU72
 446              		.loc 1 67 14 is_stmt 0 view .LVU73
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s 			page 10


 447 000a 04F03004 		and	r4, r4, #48
 448 000e 0443     		orrs	r4, r4, r0
 449              	.LVL31:
  68:Src/as5600.c  **** 	AS5600_WriteReg(CONF_H,TmpConfHigh);
 450              		.loc 1 68 2 is_stmt 1 view .LVU74
 451 0010 E1B2     		uxtb	r1, r4
 452 0012 0820     		movs	r0, #8
 453 0014 FFF7FEFF 		bl	AS5600_WriteReg
 454              	.LVL32:
  69:Src/as5600.c  **** }
 455              		.loc 1 69 1 is_stmt 0 view .LVU75
 456 0018 10BD     		pop	{r4, pc}
 457              		.loc 1 69 1 view .LVU76
 458              		.cfi_endproc
 459              	.LFE73:
 461              		.section	.text.AS5600_SetPWMFreq,"ax",%progbits
 462              		.align	1
 463              		.global	AS5600_SetPWMFreq
 464              		.syntax unified
 465              		.thumb
 466              		.thumb_func
 467              		.fpu softvfp
 469              	AS5600_SetPWMFreq:
 470              	.LVL33:
 471              	.LFB74:
  70:Src/as5600.c  **** 
  71:Src/as5600.c  **** void AS5600_SetPWMFreq(uint8_t Freq)
  72:Src/as5600.c  **** {
 472              		.loc 1 72 1 is_stmt 1 view -0
 473              		.cfi_startproc
 474              		@ args = 0, pretend = 0, frame = 0
 475              		@ frame_needed = 0, uses_anonymous_args = 0
 476              		.loc 1 72 1 is_stmt 0 view .LVU78
 477 0000 10B5     		push	{r4, lr}
 478              	.LCFI15:
 479              		.cfi_def_cfa_offset 8
 480              		.cfi_offset 4, -8
 481              		.cfi_offset 14, -4
 482 0002 0446     		mov	r4, r0
  73:Src/as5600.c  **** 	uint8_t TmpConfHigh=AS5600_ReadReg(CONF_H);
 483              		.loc 1 73 2 is_stmt 1 view .LVU79
 484              		.loc 1 73 22 is_stmt 0 view .LVU80
 485 0004 0820     		movs	r0, #8
 486              	.LVL34:
 487              		.loc 1 73 22 view .LVU81
 488 0006 FFF7FEFF 		bl	AS5600_ReadReg
 489              	.LVL35:
  74:Src/as5600.c  **** 	TmpConfHigh |= (PWMF_MASK & Freq);
 490              		.loc 1 74 2 is_stmt 1 view .LVU82
 491              		.loc 1 74 14 is_stmt 0 view .LVU83
 492 000a 24F03F04 		bic	r4, r4, #63
 493 000e 0443     		orrs	r4, r4, r0
 494              	.LVL36:
  75:Src/as5600.c  **** 	AS5600_WriteReg(CONF_H,TmpConfHigh);
 495              		.loc 1 75 2 is_stmt 1 view .LVU84
 496 0010 E1B2     		uxtb	r1, r4
 497 0012 0820     		movs	r0, #8
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s 			page 11


 498 0014 FFF7FEFF 		bl	AS5600_WriteReg
 499              	.LVL37:
  76:Src/as5600.c  **** }
 500              		.loc 1 76 1 is_stmt 0 view .LVU85
 501 0018 10BD     		pop	{r4, pc}
 502              		.loc 1 76 1 view .LVU86
 503              		.cfi_endproc
 504              	.LFE74:
 506              		.comm	enc,2,4
 507              		.text
 508              	.Letext0:
 509              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 510              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 511              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 512              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 513              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 514              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 515              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 516              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 517              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 518              		.file 11 "Inc/as5600.h"
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 as5600.c
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:16     .text.AS5600_WriteReg:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:24     .text.AS5600_WriteReg:00000000 AS5600_WriteReg
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:80     .text.AS5600_WriteReg:00000038 $d
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:85     .text.AS5600_ReadReg:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:92     .text.AS5600_ReadReg:00000000 AS5600_ReadReg
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:136    .text.AS5600_ReadReg:0000002c $d
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:144    .text.AS5600_GetAngle:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:151    .text.AS5600_GetAngle:00000000 AS5600_GetAngle
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:206    .text.AS5600_GetAngle:0000003c $d
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:211    .text.AS5600_GetRawAngle:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:218    .text.AS5600_GetRawAngle:00000000 AS5600_GetRawAngle
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:255    .text.AS5600_SetZero:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:262    .text.AS5600_SetZero:00000000 AS5600_SetZero
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:285    .text.AS5600_SetZero:0000000c $d
                            *COM*:00000002 enc
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:290    .text.AS5600_GetCalAngle:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:297    .text.AS5600_GetCalAngle:00000000 AS5600_GetCalAngle
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:337    .text.AS5600_GetCalAngle:0000001c $d
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:342    .text.AS5600_GetStatus:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:349    .text.AS5600_GetStatus:00000000 AS5600_GetStatus
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:372    .text.AS5600_SetHystheresis:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:379    .text.AS5600_SetHystheresis:00000000 AS5600_SetHystheresis
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:417    .text.AS5600_SetOutputStage:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:424    .text.AS5600_SetOutputStage:00000000 AS5600_SetOutputStage
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:462    .text.AS5600_SetPWMFreq:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccx1sKoP.s:469    .text.AS5600_SetPWMFreq:00000000 AS5600_SetPWMFreq

UNDEFINED SYMBOLS
HAL_I2C_Master_Transmit
HAL_I2C_Mem_Write
hi2c2
HAL_I2C_Mem_Read
__aeabi_i2f
__aeabi_fmul
__aeabi_f2uiz
