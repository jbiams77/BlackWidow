ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.MX_GPIO_Init,"ax",%progbits
  16              		.align	1
  17              		.arch armv7-m
  18              		.syntax unified
  19              		.thumb
  20              		.thumb_func
  21              		.fpu softvfp
  23              	MX_GPIO_Init:
  24              	.LFB81:
  25              		.file 1 "Src/main.c"
   1:Src/main.c    **** /* USER CODE BEGIN Header */
   2:Src/main.c    **** /**
   3:Src/main.c    ****   ******************************************************************************
   4:Src/main.c    ****   * @file           : main.c
   5:Src/main.c    ****   * @brief          : Main program body
   6:Src/main.c    ****   ******************************************************************************
   7:Src/main.c    ****   * @attention
   8:Src/main.c    ****   *
   9:Src/main.c    ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/main.c    ****   * All rights reserved.</center></h2>
  11:Src/main.c    ****   *
  12:Src/main.c    ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/main.c    ****   * the "License"; You may not use this file except in compliance with the
  14:Src/main.c    ****   * License. You may obtain a copy of the License at:
  15:Src/main.c    ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/main.c    ****   *
  17:Src/main.c    ****   ******************************************************************************
  18:Src/main.c    ****   */
  19:Src/main.c    **** 
  20:Src/main.c    **** /* Includes ------------------------------------------------------------------*/
  21:Src/main.c    **** #include "main.h"
  22:Src/main.c    **** #include "queue.h"
  23:Src/main.c    **** #include <stdint.h>
  24:Src/main.c    **** 
  25:Src/main.c    **** 
  26:Src/main.c    **** I2C_HandleTypeDef hi2c2;
  27:Src/main.c    **** UART_HandleTypeDef huart1;
  28:Src/main.c    **** DMA_HandleTypeDef hdma_usart1_rx;
  29:Src/main.c    **** MessageQueue *message;
  30:Src/main.c    **** Parameters *PARAM;
  31:Src/main.c    **** 
  32:Src/main.c    **** /* Private function prototypes -----------------------------------------------*/
  33:Src/main.c    **** void SystemClock_Config(void);
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 2


  34:Src/main.c    **** static void MX_GPIO_Init(void);
  35:Src/main.c    **** static void MX_DMA_Init(void);
  36:Src/main.c    **** static void MX_I2C2_Init(void);
  37:Src/main.c    **** static void MX_USART1_UART_Init(void);
  38:Src/main.c    **** uint16_t angleToHex(uint16_t angle);
  39:Src/main.c    **** void Packet_Handlers(uint8_t*);
  40:Src/main.c    **** 
  41:Src/main.c    **** uint8_t rx_buff[20];
  42:Src/main.c    **** 
  43:Src/main.c    **** 
  44:Src/main.c    **** /* USER CODE BEGIN 4 */
  45:Src/main.c    **** void HAL_UART_RxCpltCallback(UART_HandleTypeDef *huart)
  46:Src/main.c    **** {
  47:Src/main.c    ****   uint8_t h1 = rx_buff[HEADER1];
  48:Src/main.c    ****   uint8_t h2 = rx_buff[HEADER2];
  49:Src/main.c    ****   uint8_t h3 = rx_buff[HEADER3];
  50:Src/main.c    ****   uint8_t reserved = rx_buff[RESERVED];
  51:Src/main.c    ****   uint8_t id = rx_buff[PACKET_ID];
  52:Src/main.c    ****   uint8_t length1 = rx_buff[LENGTH_LOW];
  53:Src/main.c    ****   uint8_t length2 = rx_buff[LENGTH_HIGH];
  54:Src/main.c    ****   uint16_t message_length = (length2 << 8) + length1;
  55:Src/main.c    ****   volatile uint8_t trash;
  56:Src/main.c    ****   int i;
  57:Src/main.c    ****   for (i=8; i<8+message_length; i++){
  58:Src/main.c    ****     if(id==PARAM->ID){
  59:Src/main.c    ****       enQueue(message, rx_buff[i]);
  60:Src/main.c    ****     } else {
  61:Src/main.c    ****       trash = rx_buff[i];
  62:Src/main.c    ****     }    
  63:Src/main.c    ****   }
  64:Src/main.c    **** }
  65:Src/main.c    **** 
  66:Src/main.c    **** 
  67:Src/main.c    **** /* USER CODE END 4 */
  68:Src/main.c    **** 
  69:Src/main.c    **** int main(void)
  70:Src/main.c    **** {
  71:Src/main.c    ****   
  72:Src/main.c    ****   /*** Initialization ***/
  73:Src/main.c    ****   HAL_Init();
  74:Src/main.c    ****   SystemClock_Config();
  75:Src/main.c    ****   MX_GPIO_Init();
  76:Src/main.c    ****   MX_DMA_Init();
  77:Src/main.c    ****   MX_I2C2_Init();
  78:Src/main.c    ****   MX_USART1_UART_Init();
  79:Src/main.c    ****  	DWT_Init();
  80:Src/main.c    **** 	DRV8825_initStepper();
  81:Src/main.c    ****   AS5600_SetZero();
  82:Src/main.c    ****   HAL_GPIO_WritePin(DATA_DIR_GPIO_Port, DATA_DIR_Pin, 0);
  83:Src/main.c    ****   HAL_UART_Receive_DMA(&huart1, rx_buff, sizeof(rx_buff));
  84:Src/main.c    ****   //HAL_UART_Receive_IT(&huart1, rx_buff, sizeof(rx_buff));
  85:Src/main.c    ****   /**********************/
  86:Src/main.c    **** 
  87:Src/main.c    ****   //DRV8825_setCurrentAngle(AS5600_GetCalAngle());
  88:Src/main.c    ****   volatile uint16_t angle;
  89:Src/main.c    **** 
  90:Src/main.c    ****   message = constructMessage();
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 3


  91:Src/main.c    ****   PARAM = initializeParameters(5, 57600);
  92:Src/main.c    **** 
  93:Src/main.c    ****   int count = 0;
  94:Src/main.c    ****   while(1){
  95:Src/main.c    ****     
  96:Src/main.c    ****     
  97:Src/main.c    **** 
  98:Src/main.c    ****   }
  99:Src/main.c    **** 
 100:Src/main.c    **** }
 101:Src/main.c    **** 
 102:Src/main.c    **** 
 103:Src/main.c    **** // void packet_handler(){
 104:Src/main.c    **** //   uint8_t h1 = rx_buff[HEADER1];
 105:Src/main.c    **** //   uint8_t h2 = rx_buff[HEADER2];
 106:Src/main.c    **** //   uint8_t h3 = rx_buff[HEADER3];
 107:Src/main.c    **** //   uint8_t reserved = rx_buff[RESERVED];
 108:Src/main.c    **** //   uint8_t id = rx_buff[PACKET_ID];
 109:Src/main.c    **** //   uint8_t length1 = rx_buff[LENGTH_LOW];
 110:Src/main.c    **** //   uint8_t length2 = rx_buff[LENGTH_HIGH];
 111:Src/main.c    **** //   uint16_t message_length = (length2 << 8) + length1;
 112:Src/main.c    **** //   volatile uint8_t trash;
 113:Src/main.c    **** //   int i;
 114:Src/main.c    **** //   for (i=0; i<message_length; i++){
 115:Src/main.c    **** //     if(id==PARAM->ID){
 116:Src/main.c    **** //       enQueue(message, rx_buff[i]);
 117:Src/main.c    **** //     } else {
 118:Src/main.c    **** //       trash = rx_buff[i];
 119:Src/main.c    **** //     }    
 120:Src/main.c    **** //   }
 121:Src/main.c    **** // }
 122:Src/main.c    **** 
 123:Src/main.c    **** uint16_t angleToHex(uint16_t angle){
 124:Src/main.c    ****   float factor = (4096.0/360.0);
 125:Src/main.c    ****   float conversion = (float)angle * factor; 
 126:Src/main.c    ****   return conversion;
 127:Src/main.c    **** }
 128:Src/main.c    **** 
 129:Src/main.c    **** /**
 130:Src/main.c    ****   * @brief System Clock Configuration
 131:Src/main.c    ****   * @retval None
 132:Src/main.c    ****   */
 133:Src/main.c    **** void SystemClock_Config(void)
 134:Src/main.c    **** {
 135:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 136:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 137:Src/main.c    **** 
 138:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 139:Src/main.c    ****   */
 140:Src/main.c    ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 141:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 142:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 143:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 144:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 145:Src/main.c    ****   {
 146:Src/main.c    ****     Error_Handler();
 147:Src/main.c    ****   }
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 4


 148:Src/main.c    ****   /** Initializes the CPU, AHB and APB busses clocks 
 149:Src/main.c    ****   */
 150:Src/main.c    ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 151:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 152:Src/main.c    ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 153:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 154:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 155:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 156:Src/main.c    ****   
 157:Src/main.c    ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 158:Src/main.c    ****   {
 159:Src/main.c    ****     Error_Handler();
 160:Src/main.c    ****   }
 161:Src/main.c    **** }
 162:Src/main.c    **** 
 163:Src/main.c    **** /**
 164:Src/main.c    ****   * @brief I2C2 Initialization Function
 165:Src/main.c    ****   * @param None
 166:Src/main.c    ****   * @retval None
 167:Src/main.c    ****   */
 168:Src/main.c    **** static void MX_I2C2_Init(void)
 169:Src/main.c    **** {
 170:Src/main.c    **** 
 171:Src/main.c    ****   /* USER CODE BEGIN I2C2_Init 0 */
 172:Src/main.c    **** 
 173:Src/main.c    ****   /* USER CODE END I2C2_Init 0 */
 174:Src/main.c    **** 
 175:Src/main.c    ****   /* USER CODE BEGIN I2C2_Init 1 */
 176:Src/main.c    **** 
 177:Src/main.c    ****   /* USER CODE END I2C2_Init 1 */
 178:Src/main.c    ****   hi2c2.Instance = I2C2;
 179:Src/main.c    ****   hi2c2.Init.ClockSpeed = 100000;
 180:Src/main.c    ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 181:Src/main.c    ****   hi2c2.Init.OwnAddress1 = 0;
 182:Src/main.c    ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 183:Src/main.c    ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 184:Src/main.c    ****   hi2c2.Init.OwnAddress2 = 0;
 185:Src/main.c    ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 186:Src/main.c    ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 187:Src/main.c    ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 188:Src/main.c    ****   {
 189:Src/main.c    ****     Error_Handler();
 190:Src/main.c    ****   }
 191:Src/main.c    ****   /* USER CODE BEGIN I2C2_Init 2 */
 192:Src/main.c    **** 
 193:Src/main.c    ****   /* USER CODE END I2C2_Init 2 */
 194:Src/main.c    **** 
 195:Src/main.c    **** }
 196:Src/main.c    **** 
 197:Src/main.c    **** /**
 198:Src/main.c    ****   * @brief USART1 Initialization Function
 199:Src/main.c    ****   * @param None
 200:Src/main.c    ****   * @retval None
 201:Src/main.c    ****   */
 202:Src/main.c    **** static void MX_USART1_UART_Init(void)
 203:Src/main.c    **** {
 204:Src/main.c    **** 
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 5


 205:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 0 */
 206:Src/main.c    **** 
 207:Src/main.c    ****   /* USER CODE END USART1_Init 0 */
 208:Src/main.c    **** 
 209:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 1 */
 210:Src/main.c    **** 
 211:Src/main.c    ****   /* USER CODE END USART1_Init 1 */
 212:Src/main.c    ****   huart1.Instance = USART1;
 213:Src/main.c    ****   huart1.Init.BaudRate = 57600;
 214:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 215:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 216:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 217:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 218:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 219:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 220:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 221:Src/main.c    ****   {
 222:Src/main.c    ****     Error_Handler();
 223:Src/main.c    ****   }
 224:Src/main.c    ****   /* USER CODE BEGIN USART1_Init 2 */
 225:Src/main.c    **** 
 226:Src/main.c    ****   /* USER CODE END USART1_Init 2 */
 227:Src/main.c    **** 
 228:Src/main.c    **** }
 229:Src/main.c    **** 
 230:Src/main.c    **** /** 
 231:Src/main.c    ****   * Enable DMA controller clock
 232:Src/main.c    ****   */
 233:Src/main.c    **** static void MX_DMA_Init(void) 
 234:Src/main.c    **** {
 235:Src/main.c    **** 
 236:Src/main.c    ****   /* DMA controller clock enable */
 237:Src/main.c    ****   __HAL_RCC_DMA1_CLK_ENABLE();
 238:Src/main.c    **** 
 239:Src/main.c    ****   /* DMA interrupt init */
 240:Src/main.c    ****   /* DMA1_Channel5_IRQn interrupt configuration */
 241:Src/main.c    ****   HAL_NVIC_SetPriority(DMA1_Channel5_IRQn, 0, 0);
 242:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Channel5_IRQn);
 243:Src/main.c    **** 
 244:Src/main.c    **** }
 245:Src/main.c    **** 
 246:Src/main.c    **** /**
 247:Src/main.c    ****   * @brief GPIO Initialization Function
 248:Src/main.c    ****   * @param None
 249:Src/main.c    ****   * @retval None
 250:Src/main.c    ****   */
 251:Src/main.c    **** static void MX_GPIO_Init(void)
 252:Src/main.c    **** {
  26              		.loc 1 252 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 24
  33              		.cfi_offset 4, -24
  34              		.cfi_offset 5, -20
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 6


  35              		.cfi_offset 6, -16
  36              		.cfi_offset 7, -12
  37              		.cfi_offset 8, -8
  38              		.cfi_offset 14, -4
  39 0004 88B0     		sub	sp, sp, #32
  40              	.LCFI1:
  41              		.cfi_def_cfa_offset 56
 253:Src/main.c    ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  42              		.loc 1 253 3 view .LVU1
  43              		.loc 1 253 20 is_stmt 0 view .LVU2
  44 0006 0024     		movs	r4, #0
  45 0008 0494     		str	r4, [sp, #16]
  46 000a 0594     		str	r4, [sp, #20]
  47 000c 0694     		str	r4, [sp, #24]
  48 000e 0794     		str	r4, [sp, #28]
 254:Src/main.c    **** 
 255:Src/main.c    ****   /* GPIO Ports Clock Enable */
 256:Src/main.c    ****   __HAL_RCC_GPIOD_CLK_ENABLE();
  49              		.loc 1 256 3 is_stmt 1 view .LVU3
  50              	.LBB2:
  51              		.loc 1 256 3 view .LVU4
  52              		.loc 1 256 3 view .LVU5
  53 0010 214B     		ldr	r3, .L3
  54 0012 9A69     		ldr	r2, [r3, #24]
  55 0014 42F02002 		orr	r2, r2, #32
  56 0018 9A61     		str	r2, [r3, #24]
  57              		.loc 1 256 3 view .LVU6
  58 001a 9A69     		ldr	r2, [r3, #24]
  59 001c 02F02002 		and	r2, r2, #32
  60 0020 0192     		str	r2, [sp, #4]
  61              		.loc 1 256 3 view .LVU7
  62 0022 019A     		ldr	r2, [sp, #4]
  63              	.LBE2:
  64              		.loc 1 256 3 view .LVU8
 257:Src/main.c    ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  65              		.loc 1 257 3 view .LVU9
  66              	.LBB3:
  67              		.loc 1 257 3 view .LVU10
  68              		.loc 1 257 3 view .LVU11
  69 0024 9A69     		ldr	r2, [r3, #24]
  70 0026 42F00402 		orr	r2, r2, #4
  71 002a 9A61     		str	r2, [r3, #24]
  72              		.loc 1 257 3 view .LVU12
  73 002c 9A69     		ldr	r2, [r3, #24]
  74 002e 02F00402 		and	r2, r2, #4
  75 0032 0292     		str	r2, [sp, #8]
  76              		.loc 1 257 3 view .LVU13
  77 0034 029A     		ldr	r2, [sp, #8]
  78              	.LBE3:
  79              		.loc 1 257 3 view .LVU14
 258:Src/main.c    ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  80              		.loc 1 258 3 view .LVU15
  81              	.LBB4:
  82              		.loc 1 258 3 view .LVU16
  83              		.loc 1 258 3 view .LVU17
  84 0036 9A69     		ldr	r2, [r3, #24]
  85 0038 42F00802 		orr	r2, r2, #8
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 7


  86 003c 9A61     		str	r2, [r3, #24]
  87              		.loc 1 258 3 view .LVU18
  88 003e 9B69     		ldr	r3, [r3, #24]
  89 0040 03F00803 		and	r3, r3, #8
  90 0044 0393     		str	r3, [sp, #12]
  91              		.loc 1 258 3 view .LVU19
  92 0046 039B     		ldr	r3, [sp, #12]
  93              	.LBE4:
  94              		.loc 1 258 3 view .LVU20
 259:Src/main.c    **** 
 260:Src/main.c    ****   /*Configure GPIO pin Output Level */
 261:Src/main.c    ****   HAL_GPIO_WritePin(GPIOA, FAN_Pin|LED_Pin|STEP_Pin|ENABLE_Pin 
  95              		.loc 1 261 3 view .LVU21
  96 0048 DFF85480 		ldr	r8, .L3+8
  97 004c 2246     		mov	r2, r4
  98 004e 40F20C71 		movw	r1, #1804
  99 0052 4046     		mov	r0, r8
 100 0054 FFF7FEFF 		bl	HAL_GPIO_WritePin
 101              	.LVL0:
 262:Src/main.c    ****                           |STEP_DIR_Pin, GPIO_PIN_RESET);
 263:Src/main.c    **** 
 264:Src/main.c    ****   /*Configure GPIO pin Output Level */
 265:Src/main.c    ****   HAL_GPIO_WritePin(GPIOB, M2_Pin|M1_Pin|M0_Pin|DATA_DIR_Pin, GPIO_PIN_RESET);
 102              		.loc 1 265 3 view .LVU22
 103 0058 104D     		ldr	r5, .L3+4
 104 005a 2246     		mov	r2, r4
 105 005c 4EF22001 		movw	r1, #57376
 106 0060 2846     		mov	r0, r5
 107 0062 FFF7FEFF 		bl	HAL_GPIO_WritePin
 108              	.LVL1:
 266:Src/main.c    **** 
 267:Src/main.c    ****   /*Configure GPIO pins : FAN_Pin LED_Pin STEP_Pin ENABLE_Pin 
 268:Src/main.c    ****                            STEP_DIR_Pin */
 269:Src/main.c    ****   GPIO_InitStruct.Pin = FAN_Pin|LED_Pin|STEP_Pin|ENABLE_Pin 
 109              		.loc 1 269 3 view .LVU23
 110              		.loc 1 269 23 is_stmt 0 view .LVU24
 111 0066 40F20C73 		movw	r3, #1804
 112 006a 0493     		str	r3, [sp, #16]
 270:Src/main.c    ****                           |STEP_DIR_Pin;
 271:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 113              		.loc 1 271 3 is_stmt 1 view .LVU25
 114              		.loc 1 271 24 is_stmt 0 view .LVU26
 115 006c 0127     		movs	r7, #1
 116 006e 0597     		str	r7, [sp, #20]
 272:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 117              		.loc 1 272 3 is_stmt 1 view .LVU27
 118              		.loc 1 272 24 is_stmt 0 view .LVU28
 119 0070 0694     		str	r4, [sp, #24]
 273:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 120              		.loc 1 273 3 is_stmt 1 view .LVU29
 121              		.loc 1 273 25 is_stmt 0 view .LVU30
 122 0072 0326     		movs	r6, #3
 123 0074 0796     		str	r6, [sp, #28]
 274:Src/main.c    ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 124              		.loc 1 274 3 is_stmt 1 view .LVU31
 125 0076 04A9     		add	r1, sp, #16
 126 0078 4046     		mov	r0, r8
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 8


 127 007a FFF7FEFF 		bl	HAL_GPIO_Init
 128              	.LVL2:
 275:Src/main.c    **** 
 276:Src/main.c    ****   /*Configure GPIO pins : M2_Pin M1_Pin M0_Pin DATA_DIR_Pin */
 277:Src/main.c    ****   GPIO_InitStruct.Pin = M2_Pin|M1_Pin|M0_Pin|DATA_DIR_Pin;
 129              		.loc 1 277 3 view .LVU32
 130              		.loc 1 277 23 is_stmt 0 view .LVU33
 131 007e 4EF22003 		movw	r3, #57376
 132 0082 0493     		str	r3, [sp, #16]
 278:Src/main.c    ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 133              		.loc 1 278 3 is_stmt 1 view .LVU34
 134              		.loc 1 278 24 is_stmt 0 view .LVU35
 135 0084 0597     		str	r7, [sp, #20]
 279:Src/main.c    ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 136              		.loc 1 279 3 is_stmt 1 view .LVU36
 137              		.loc 1 279 24 is_stmt 0 view .LVU37
 138 0086 0694     		str	r4, [sp, #24]
 280:Src/main.c    ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_HIGH;
 139              		.loc 1 280 3 is_stmt 1 view .LVU38
 140              		.loc 1 280 25 is_stmt 0 view .LVU39
 141 0088 0796     		str	r6, [sp, #28]
 281:Src/main.c    ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 142              		.loc 1 281 3 is_stmt 1 view .LVU40
 143 008a 04A9     		add	r1, sp, #16
 144 008c 2846     		mov	r0, r5
 145 008e FFF7FEFF 		bl	HAL_GPIO_Init
 146              	.LVL3:
 282:Src/main.c    **** 
 283:Src/main.c    **** }
 147              		.loc 1 283 1 is_stmt 0 view .LVU41
 148 0092 08B0     		add	sp, sp, #32
 149              	.LCFI2:
 150              		.cfi_def_cfa_offset 24
 151              		@ sp needed
 152 0094 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 153              	.L4:
 154              		.align	2
 155              	.L3:
 156 0098 00100240 		.word	1073876992
 157 009c 000C0140 		.word	1073810432
 158 00a0 00080140 		.word	1073809408
 159              		.cfi_endproc
 160              	.LFE81:
 162              		.section	.text.MX_DMA_Init,"ax",%progbits
 163              		.align	1
 164              		.syntax unified
 165              		.thumb
 166              		.thumb_func
 167              		.fpu softvfp
 169              	MX_DMA_Init:
 170              	.LFB80:
 234:Src/main.c    **** 
 171              		.loc 1 234 1 is_stmt 1 view -0
 172              		.cfi_startproc
 173              		@ args = 0, pretend = 0, frame = 8
 174              		@ frame_needed = 0, uses_anonymous_args = 0
 175 0000 00B5     		push	{lr}
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 9


 176              	.LCFI3:
 177              		.cfi_def_cfa_offset 4
 178              		.cfi_offset 14, -4
 179 0002 83B0     		sub	sp, sp, #12
 180              	.LCFI4:
 181              		.cfi_def_cfa_offset 16
 237:Src/main.c    **** 
 182              		.loc 1 237 3 view .LVU43
 183              	.LBB5:
 237:Src/main.c    **** 
 184              		.loc 1 237 3 view .LVU44
 237:Src/main.c    **** 
 185              		.loc 1 237 3 view .LVU45
 186 0004 0A4B     		ldr	r3, .L7
 187 0006 5A69     		ldr	r2, [r3, #20]
 188 0008 42F00102 		orr	r2, r2, #1
 189 000c 5A61     		str	r2, [r3, #20]
 237:Src/main.c    **** 
 190              		.loc 1 237 3 view .LVU46
 191 000e 5B69     		ldr	r3, [r3, #20]
 192 0010 03F00103 		and	r3, r3, #1
 193 0014 0193     		str	r3, [sp, #4]
 237:Src/main.c    **** 
 194              		.loc 1 237 3 view .LVU47
 195 0016 019B     		ldr	r3, [sp, #4]
 196              	.LBE5:
 237:Src/main.c    **** 
 197              		.loc 1 237 3 view .LVU48
 241:Src/main.c    ****   HAL_NVIC_EnableIRQ(DMA1_Channel5_IRQn);
 198              		.loc 1 241 3 view .LVU49
 199 0018 0022     		movs	r2, #0
 200 001a 1146     		mov	r1, r2
 201 001c 0F20     		movs	r0, #15
 202 001e FFF7FEFF 		bl	HAL_NVIC_SetPriority
 203              	.LVL4:
 242:Src/main.c    **** 
 204              		.loc 1 242 3 view .LVU50
 205 0022 0F20     		movs	r0, #15
 206 0024 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 207              	.LVL5:
 244:Src/main.c    **** 
 208              		.loc 1 244 1 is_stmt 0 view .LVU51
 209 0028 03B0     		add	sp, sp, #12
 210              	.LCFI5:
 211              		.cfi_def_cfa_offset 4
 212              		@ sp needed
 213 002a 5DF804FB 		ldr	pc, [sp], #4
 214              	.L8:
 215 002e 00BF     		.align	2
 216              	.L7:
 217 0030 00100240 		.word	1073876992
 218              		.cfi_endproc
 219              	.LFE80:
 221              		.section	.text.MX_I2C2_Init,"ax",%progbits
 222              		.align	1
 223              		.syntax unified
 224              		.thumb
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 10


 225              		.thumb_func
 226              		.fpu softvfp
 228              	MX_I2C2_Init:
 229              	.LFB78:
 169:Src/main.c    **** 
 230              		.loc 1 169 1 is_stmt 1 view -0
 231              		.cfi_startproc
 232              		@ args = 0, pretend = 0, frame = 0
 233              		@ frame_needed = 0, uses_anonymous_args = 0
 234 0000 08B5     		push	{r3, lr}
 235              	.LCFI6:
 236              		.cfi_def_cfa_offset 8
 237              		.cfi_offset 3, -8
 238              		.cfi_offset 14, -4
 178:Src/main.c    ****   hi2c2.Init.ClockSpeed = 100000;
 239              		.loc 1 178 3 view .LVU53
 178:Src/main.c    ****   hi2c2.Init.ClockSpeed = 100000;
 240              		.loc 1 178 18 is_stmt 0 view .LVU54
 241 0002 0948     		ldr	r0, .L11
 242 0004 094B     		ldr	r3, .L11+4
 243 0006 0360     		str	r3, [r0]
 179:Src/main.c    ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 244              		.loc 1 179 3 is_stmt 1 view .LVU55
 179:Src/main.c    ****   hi2c2.Init.DutyCycle = I2C_DUTYCYCLE_2;
 245              		.loc 1 179 25 is_stmt 0 view .LVU56
 246 0008 094B     		ldr	r3, .L11+8
 247 000a 4360     		str	r3, [r0, #4]
 180:Src/main.c    ****   hi2c2.Init.OwnAddress1 = 0;
 248              		.loc 1 180 3 is_stmt 1 view .LVU57
 180:Src/main.c    ****   hi2c2.Init.OwnAddress1 = 0;
 249              		.loc 1 180 24 is_stmt 0 view .LVU58
 250 000c 0023     		movs	r3, #0
 251 000e 8360     		str	r3, [r0, #8]
 181:Src/main.c    ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 252              		.loc 1 181 3 is_stmt 1 view .LVU59
 181:Src/main.c    ****   hi2c2.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 253              		.loc 1 181 26 is_stmt 0 view .LVU60
 254 0010 C360     		str	r3, [r0, #12]
 182:Src/main.c    ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 255              		.loc 1 182 3 is_stmt 1 view .LVU61
 182:Src/main.c    ****   hi2c2.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 256              		.loc 1 182 29 is_stmt 0 view .LVU62
 257 0012 4FF48042 		mov	r2, #16384
 258 0016 0261     		str	r2, [r0, #16]
 183:Src/main.c    ****   hi2c2.Init.OwnAddress2 = 0;
 259              		.loc 1 183 3 is_stmt 1 view .LVU63
 183:Src/main.c    ****   hi2c2.Init.OwnAddress2 = 0;
 260              		.loc 1 183 30 is_stmt 0 view .LVU64
 261 0018 4361     		str	r3, [r0, #20]
 184:Src/main.c    ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 262              		.loc 1 184 3 is_stmt 1 view .LVU65
 184:Src/main.c    ****   hi2c2.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 263              		.loc 1 184 26 is_stmt 0 view .LVU66
 264 001a 8361     		str	r3, [r0, #24]
 185:Src/main.c    ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 265              		.loc 1 185 3 is_stmt 1 view .LVU67
 185:Src/main.c    ****   hi2c2.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 11


 266              		.loc 1 185 30 is_stmt 0 view .LVU68
 267 001c C361     		str	r3, [r0, #28]
 186:Src/main.c    ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 268              		.loc 1 186 3 is_stmt 1 view .LVU69
 186:Src/main.c    ****   if (HAL_I2C_Init(&hi2c2) != HAL_OK)
 269              		.loc 1 186 28 is_stmt 0 view .LVU70
 270 001e 0362     		str	r3, [r0, #32]
 187:Src/main.c    ****   {
 271              		.loc 1 187 3 is_stmt 1 view .LVU71
 187:Src/main.c    ****   {
 272              		.loc 1 187 7 is_stmt 0 view .LVU72
 273 0020 FFF7FEFF 		bl	HAL_I2C_Init
 274              	.LVL6:
 195:Src/main.c    **** 
 275              		.loc 1 195 1 view .LVU73
 276 0024 08BD     		pop	{r3, pc}
 277              	.L12:
 278 0026 00BF     		.align	2
 279              	.L11:
 280 0028 00000000 		.word	hi2c2
 281 002c 00580040 		.word	1073764352
 282 0030 A0860100 		.word	100000
 283              		.cfi_endproc
 284              	.LFE78:
 286              		.section	.text.MX_USART1_UART_Init,"ax",%progbits
 287              		.align	1
 288              		.syntax unified
 289              		.thumb
 290              		.thumb_func
 291              		.fpu softvfp
 293              	MX_USART1_UART_Init:
 294              	.LFB79:
 203:Src/main.c    **** 
 295              		.loc 1 203 1 is_stmt 1 view -0
 296              		.cfi_startproc
 297              		@ args = 0, pretend = 0, frame = 0
 298              		@ frame_needed = 0, uses_anonymous_args = 0
 299 0000 08B5     		push	{r3, lr}
 300              	.LCFI7:
 301              		.cfi_def_cfa_offset 8
 302              		.cfi_offset 3, -8
 303              		.cfi_offset 14, -4
 212:Src/main.c    ****   huart1.Init.BaudRate = 57600;
 304              		.loc 1 212 3 view .LVU75
 212:Src/main.c    ****   huart1.Init.BaudRate = 57600;
 305              		.loc 1 212 19 is_stmt 0 view .LVU76
 306 0002 0848     		ldr	r0, .L15
 307 0004 084B     		ldr	r3, .L15+4
 308 0006 0360     		str	r3, [r0]
 213:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 309              		.loc 1 213 3 is_stmt 1 view .LVU77
 213:Src/main.c    ****   huart1.Init.WordLength = UART_WORDLENGTH_8B;
 310              		.loc 1 213 24 is_stmt 0 view .LVU78
 311 0008 4FF46143 		mov	r3, #57600
 312 000c 4360     		str	r3, [r0, #4]
 214:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 313              		.loc 1 214 3 is_stmt 1 view .LVU79
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 12


 214:Src/main.c    ****   huart1.Init.StopBits = UART_STOPBITS_1;
 314              		.loc 1 214 26 is_stmt 0 view .LVU80
 315 000e 0023     		movs	r3, #0
 316 0010 8360     		str	r3, [r0, #8]
 215:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 317              		.loc 1 215 3 is_stmt 1 view .LVU81
 215:Src/main.c    ****   huart1.Init.Parity = UART_PARITY_NONE;
 318              		.loc 1 215 24 is_stmt 0 view .LVU82
 319 0012 C360     		str	r3, [r0, #12]
 216:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 320              		.loc 1 216 3 is_stmt 1 view .LVU83
 216:Src/main.c    ****   huart1.Init.Mode = UART_MODE_TX_RX;
 321              		.loc 1 216 22 is_stmt 0 view .LVU84
 322 0014 0361     		str	r3, [r0, #16]
 217:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 323              		.loc 1 217 3 is_stmt 1 view .LVU85
 217:Src/main.c    ****   huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 324              		.loc 1 217 20 is_stmt 0 view .LVU86
 325 0016 0C22     		movs	r2, #12
 326 0018 4261     		str	r2, [r0, #20]
 218:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 327              		.loc 1 218 3 is_stmt 1 view .LVU87
 218:Src/main.c    ****   huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 328              		.loc 1 218 25 is_stmt 0 view .LVU88
 329 001a 8361     		str	r3, [r0, #24]
 219:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 330              		.loc 1 219 3 is_stmt 1 view .LVU89
 219:Src/main.c    ****   if (HAL_UART_Init(&huart1) != HAL_OK)
 331              		.loc 1 219 28 is_stmt 0 view .LVU90
 332 001c C361     		str	r3, [r0, #28]
 220:Src/main.c    ****   {
 333              		.loc 1 220 3 is_stmt 1 view .LVU91
 220:Src/main.c    ****   {
 334              		.loc 1 220 7 is_stmt 0 view .LVU92
 335 001e FFF7FEFF 		bl	HAL_UART_Init
 336              	.LVL7:
 228:Src/main.c    **** 
 337              		.loc 1 228 1 view .LVU93
 338 0022 08BD     		pop	{r3, pc}
 339              	.L16:
 340              		.align	2
 341              	.L15:
 342 0024 00000000 		.word	huart1
 343 0028 00380140 		.word	1073821696
 344              		.cfi_endproc
 345              	.LFE79:
 347              		.section	.text.initializeParameters,"ax",%progbits
 348              		.align	1
 349              		.global	initializeParameters
 350              		.syntax unified
 351              		.thumb
 352              		.thumb_func
 353              		.fpu softvfp
 355              	initializeParameters:
 356              	.LVL8:
 357              	.LFB65:
 358              		.file 2 "Inc/queue.h"
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 13


   1:Inc/queue.h   **** #include <stdint.h>
   2:Inc/queue.h   **** #include <stdlib.h>
   3:Inc/queue.h   **** 
   4:Inc/queue.h   **** 
   5:Inc/queue.h   **** #ifndef __QUEUE_H_
   6:Inc/queue.h   **** #define __QUEUE_H_
   7:Inc/queue.h   **** 
   8:Inc/queue.h   **** #define TRUE    1
   9:Inc/queue.h   **** #define FALSE	0
  10:Inc/queue.h   **** #define SIZE   200
  11:Inc/queue.h   **** 
  12:Inc/queue.h   **** typedef struct Parameters{
  13:Inc/queue.h   ****   int ID;
  14:Inc/queue.h   ****   int BAUD;
  15:Inc/queue.h   **** } Parameters;
  16:Inc/queue.h   **** 
  17:Inc/queue.h   **** Parameters* initializeParameters(int id, int baud){
 359              		.loc 2 17 51 is_stmt 1 view -0
 360              		.cfi_startproc
 361              		@ args = 0, pretend = 0, frame = 0
 362              		@ frame_needed = 0, uses_anonymous_args = 0
 363              		.loc 2 17 51 is_stmt 0 view .LVU95
 364 0000 38B5     		push	{r3, r4, r5, lr}
 365              	.LCFI8:
 366              		.cfi_def_cfa_offset 16
 367              		.cfi_offset 3, -16
 368              		.cfi_offset 4, -12
 369              		.cfi_offset 5, -8
 370              		.cfi_offset 14, -4
 371 0002 0546     		mov	r5, r0
 372 0004 0C46     		mov	r4, r1
  18:Inc/queue.h   ****   Parameters *param = (Parameters*) malloc(sizeof(Parameters));
 373              		.loc 2 18 3 is_stmt 1 view .LVU96
 374              		.loc 2 18 37 is_stmt 0 view .LVU97
 375 0006 0820     		movs	r0, #8
 376              	.LVL9:
 377              		.loc 2 18 37 view .LVU98
 378 0008 FFF7FEFF 		bl	malloc
 379              	.LVL10:
  19:Inc/queue.h   ****   param->ID = id;
 380              		.loc 2 19 3 is_stmt 1 view .LVU99
 381              		.loc 2 19 13 is_stmt 0 view .LVU100
 382 000c 0560     		str	r5, [r0]
  20:Inc/queue.h   ****   param->BAUD = baud;
 383              		.loc 2 20 3 is_stmt 1 view .LVU101
 384              		.loc 2 20 15 is_stmt 0 view .LVU102
 385 000e 4460     		str	r4, [r0, #4]
  21:Inc/queue.h   ****   return param;
 386              		.loc 2 21 3 is_stmt 1 view .LVU103
  22:Inc/queue.h   **** }
 387              		.loc 2 22 1 is_stmt 0 view .LVU104
 388 0010 38BD     		pop	{r3, r4, r5, pc}
 389              		.loc 2 22 1 view .LVU105
 390              		.cfi_endproc
 391              	.LFE65:
 393              		.section	.text.constructMessage,"ax",%progbits
 394              		.align	1
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 14


 395              		.global	constructMessage
 396              		.syntax unified
 397              		.thumb
 398              		.thumb_func
 399              		.fpu softvfp
 401              	constructMessage:
 402              	.LFB66:
  23:Inc/queue.h   **** 
  24:Inc/queue.h   **** /* the HEAD of the MessageQueue, hold the amount of node's that are in the queue*/
  25:Inc/queue.h   **** typedef struct MessageQueue { 
  26:Inc/queue.h   ****     uint8_t message[SIZE];
  27:Inc/queue.h   ****     int front; 
  28:Inc/queue.h   ****     int rear;     
  29:Inc/queue.h   **** } MessageQueue;
  30:Inc/queue.h   **** 
  31:Inc/queue.h   **** 
  32:Inc/queue.h   **** int enQueue(MessageQueue*, uint8_t);
  33:Inc/queue.h   **** uint8_t deQueue(MessageQueue*);
  34:Inc/queue.h   **** int isEmpty(MessageQueue*);
  35:Inc/queue.h   **** int isFull(MessageQueue*);
  36:Inc/queue.h   **** uint8_t peek(MessageQueue*);
  37:Inc/queue.h   **** int next(MessageQueue*);
  38:Inc/queue.h   **** int nextFront(MessageQueue*);
  39:Inc/queue.h   **** 
  40:Inc/queue.h   **** 
  41:Inc/queue.h   **** MessageQueue* constructMessage(){
 403              		.loc 2 41 33 is_stmt 1 view -0
 404              		.cfi_startproc
 405              		@ args = 0, pretend = 0, frame = 0
 406              		@ frame_needed = 0, uses_anonymous_args = 0
 407 0000 08B5     		push	{r3, lr}
 408              	.LCFI9:
 409              		.cfi_def_cfa_offset 8
 410              		.cfi_offset 3, -8
 411              		.cfi_offset 14, -4
  42:Inc/queue.h   ****     MessageQueue *queue = (MessageQueue*) malloc(sizeof (MessageQueue)); 
 412              		.loc 2 42 5 view .LVU107
 413              		.loc 2 42 43 is_stmt 0 view .LVU108
 414 0002 D020     		movs	r0, #208
 415 0004 FFF7FEFF 		bl	malloc
 416              	.LVL11:
  43:Inc/queue.h   ****     int i;
 417              		.loc 2 43 5 is_stmt 1 view .LVU109
  44:Inc/queue.h   ****     queue->front = -1;
 418              		.loc 2 44 5 view .LVU110
 419              		.loc 2 44 18 is_stmt 0 view .LVU111
 420 0008 4FF0FF33 		mov	r3, #-1
 421 000c C0F8C830 		str	r3, [r0, #200]
  45:Inc/queue.h   ****     queue->rear = 0;
 422              		.loc 2 45 5 is_stmt 1 view .LVU112
 423              		.loc 2 45 17 is_stmt 0 view .LVU113
 424 0010 0023     		movs	r3, #0
 425 0012 C0F8CC30 		str	r3, [r0, #204]
  46:Inc/queue.h   ****     for (i=0; i<SIZE; i++){
 426              		.loc 2 46 5 is_stmt 1 view .LVU114
 427              	.LVL12:
 428              	.L20:
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 15


 429              		.loc 2 46 15 discriminator 1 view .LVU115
 430              		.loc 2 46 5 is_stmt 0 discriminator 1 view .LVU116
 431 0016 C72B     		cmp	r3, #199
 432 0018 03DC     		bgt	.L23
  47:Inc/queue.h   ****         queue->message[i] = 0;    
 433              		.loc 2 47 9 is_stmt 1 discriminator 3 view .LVU117
 434              		.loc 2 47 27 is_stmt 0 discriminator 3 view .LVU118
 435 001a 0022     		movs	r2, #0
 436 001c C254     		strb	r2, [r0, r3]
  46:Inc/queue.h   ****     for (i=0; i<SIZE; i++){
 437              		.loc 2 46 23 is_stmt 1 discriminator 3 view .LVU119
  46:Inc/queue.h   ****     for (i=0; i<SIZE; i++){
 438              		.loc 2 46 24 is_stmt 0 discriminator 3 view .LVU120
 439 001e 0133     		adds	r3, r3, #1
 440              	.LVL13:
  46:Inc/queue.h   ****     for (i=0; i<SIZE; i++){
 441              		.loc 2 46 24 discriminator 3 view .LVU121
 442 0020 F9E7     		b	.L20
 443              	.L23:
  48:Inc/queue.h   ****     }
  49:Inc/queue.h   ****     return queue;
  50:Inc/queue.h   **** }
 444              		.loc 2 50 1 view .LVU122
 445 0022 08BD     		pop	{r3, pc}
 446              		.loc 2 50 1 view .LVU123
 447              		.cfi_endproc
 448              	.LFE66:
 450              		.section	.text.peek,"ax",%progbits
 451              		.align	1
 452              		.global	peek
 453              		.syntax unified
 454              		.thumb
 455              		.thumb_func
 456              		.fpu softvfp
 458              	peek:
 459              	.LVL14:
 460              	.LFB69:
  51:Inc/queue.h   **** 
  52:Inc/queue.h   **** 
  53:Inc/queue.h   **** int enQueue(MessageQueue *queue, uint8_t data){
  54:Inc/queue.h   ****     if(isEmpty(queue)){
  55:Inc/queue.h   ****         queue->front = queue->rear;
  56:Inc/queue.h   ****         queue->message[queue->rear] = data;
  57:Inc/queue.h   ****         return TRUE;
  58:Inc/queue.h   ****     } else if (isFull(queue)){
  59:Inc/queue.h   ****         return FALSE;
  60:Inc/queue.h   ****     } else {
  61:Inc/queue.h   ****         queue->rear = nextRear(queue);
  62:Inc/queue.h   ****         queue->message[queue->rear] = data;
  63:Inc/queue.h   ****         return TRUE;
  64:Inc/queue.h   ****     }
  65:Inc/queue.h   **** }
  66:Inc/queue.h   **** 
  67:Inc/queue.h   **** uint8_t deQueue(MessageQueue *queue){
  68:Inc/queue.h   ****     if(isEmpty(queue)){
  69:Inc/queue.h   ****         return 253;
  70:Inc/queue.h   ****     } else if (queue->front==queue->rear){
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 16


  71:Inc/queue.h   ****         uint8_t temp = queue->message[queue->front];
  72:Inc/queue.h   ****         queue->front = -1;
  73:Inc/queue.h   ****         return temp;
  74:Inc/queue.h   ****     } else {
  75:Inc/queue.h   ****         uint8_t temp = queue->message[queue->front];
  76:Inc/queue.h   ****         queue->front = nextFront(queue);
  77:Inc/queue.h   ****         return temp;
  78:Inc/queue.h   ****     }
  79:Inc/queue.h   **** }
  80:Inc/queue.h   **** 
  81:Inc/queue.h   **** uint8_t peek(MessageQueue *queue){
 461              		.loc 2 81 34 is_stmt 1 view -0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465              		@ link register save eliminated.
  82:Inc/queue.h   ****     return queue->message[queue->front];
 466              		.loc 2 82 5 view .LVU125
 467              		.loc 2 82 32 is_stmt 0 view .LVU126
 468 0000 D0F8C830 		ldr	r3, [r0, #200]
  83:Inc/queue.h   **** }
 469              		.loc 2 83 1 view .LVU127
 470 0004 C05C     		ldrb	r0, [r0, r3]	@ zero_extendqisi2
 471              	.LVL15:
 472              		.loc 2 83 1 view .LVU128
 473 0006 7047     		bx	lr
 474              		.cfi_endproc
 475              	.LFE69:
 477              		.section	.text.isEmpty,"ax",%progbits
 478              		.align	1
 479              		.global	isEmpty
 480              		.syntax unified
 481              		.thumb
 482              		.thumb_func
 483              		.fpu softvfp
 485              	isEmpty:
 486              	.LVL16:
 487              	.LFB70:
  84:Inc/queue.h   **** 
  85:Inc/queue.h   **** int isEmpty(MessageQueue *queue){
 488              		.loc 2 85 33 is_stmt 1 view -0
 489              		.cfi_startproc
 490              		@ args = 0, pretend = 0, frame = 0
 491              		@ frame_needed = 0, uses_anonymous_args = 0
 492              		@ link register save eliminated.
  86:Inc/queue.h   ****     if(queue->front == -1){
 493              		.loc 2 86 5 view .LVU130
 494              		.loc 2 86 13 is_stmt 0 view .LVU131
 495 0000 D0F8C830 		ldr	r3, [r0, #200]
 496              		.loc 2 86 7 view .LVU132
 497 0004 B3F1FF3F 		cmp	r3, #-1
 498 0008 01D0     		beq	.L27
  87:Inc/queue.h   ****         return TRUE;    
  88:Inc/queue.h   ****     }
  89:Inc/queue.h   ****     return FALSE;
 499              		.loc 2 89 12 view .LVU133
 500 000a 0020     		movs	r0, #0
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 17


 501              	.LVL17:
 502              		.loc 2 89 12 view .LVU134
 503 000c 7047     		bx	lr
 504              	.LVL18:
 505              	.L27:
  87:Inc/queue.h   ****         return TRUE;    
 506              		.loc 2 87 16 view .LVU135
 507 000e 0120     		movs	r0, #1
 508              	.LVL19:
  90:Inc/queue.h   **** }
 509              		.loc 2 90 1 view .LVU136
 510 0010 7047     		bx	lr
 511              		.cfi_endproc
 512              	.LFE70:
 514              		.section	.text.nextRear,"ax",%progbits
 515              		.align	1
 516              		.global	nextRear
 517              		.syntax unified
 518              		.thumb
 519              		.thumb_func
 520              		.fpu softvfp
 522              	nextRear:
 523              	.LVL20:
 524              	.LFB72:
  91:Inc/queue.h   **** 
  92:Inc/queue.h   **** int isFull(MessageQueue *queue){
  93:Inc/queue.h   ****     if(nextRear(queue)==queue->front){
  94:Inc/queue.h   ****         return TRUE;
  95:Inc/queue.h   ****     }
  96:Inc/queue.h   ****     return FALSE;
  97:Inc/queue.h   **** }
  98:Inc/queue.h   **** 
  99:Inc/queue.h   **** int nextRear(MessageQueue *queue){
 525              		.loc 2 99 34 is_stmt 1 view -0
 526              		.cfi_startproc
 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529              		@ link register save eliminated.
 100:Inc/queue.h   ****     return (queue->rear + 1) % SIZE;
 530              		.loc 2 100 5 view .LVU138
 531              		.loc 2 100 18 is_stmt 0 view .LVU139
 532 0000 D0F8CC30 		ldr	r3, [r0, #204]
 533              		.loc 2 100 25 view .LVU140
 534 0004 0133     		adds	r3, r3, #1
 535              		.loc 2 100 30 view .LVU141
 536 0006 0548     		ldr	r0, .L29
 537              	.LVL21:
 538              		.loc 2 100 30 view .LVU142
 539 0008 80FB0320 		smull	r2, r0, r0, r3
 540 000c DA17     		asrs	r2, r3, #31
 541 000e C2EBA012 		rsb	r2, r2, r0, asr #6
 101:Inc/queue.h   **** }
 542              		.loc 2 101 1 view .LVU143
 543 0012 C820     		movs	r0, #200
 544 0014 00FB1230 		mls	r0, r0, r2, r3
 545 0018 7047     		bx	lr
 546              	.L30:
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 18


 547 001a 00BF     		.align	2
 548              	.L29:
 549 001c 1F85EB51 		.word	1374389535
 550              		.cfi_endproc
 551              	.LFE72:
 553              		.section	.text.isFull,"ax",%progbits
 554              		.align	1
 555              		.global	isFull
 556              		.syntax unified
 557              		.thumb
 558              		.thumb_func
 559              		.fpu softvfp
 561              	isFull:
 562              	.LVL22:
 563              	.LFB71:
  92:Inc/queue.h   ****     if(nextRear(queue)==queue->front){
 564              		.loc 2 92 32 is_stmt 1 view -0
 565              		.cfi_startproc
 566              		@ args = 0, pretend = 0, frame = 0
 567              		@ frame_needed = 0, uses_anonymous_args = 0
  92:Inc/queue.h   ****     if(nextRear(queue)==queue->front){
 568              		.loc 2 92 32 is_stmt 0 view .LVU145
 569 0000 10B5     		push	{r4, lr}
 570              	.LCFI10:
 571              		.cfi_def_cfa_offset 8
 572              		.cfi_offset 4, -8
 573              		.cfi_offset 14, -4
 574 0002 0446     		mov	r4, r0
  93:Inc/queue.h   ****         return TRUE;
 575              		.loc 2 93 5 is_stmt 1 view .LVU146
 576              	.LBB6:
  93:Inc/queue.h   ****         return TRUE;
 577              		.loc 2 93 8 is_stmt 0 view .LVU147
 578 0004 FFF7FEFF 		bl	nextRear
 579              	.LVL23:
  93:Inc/queue.h   ****         return TRUE;
 580              		.loc 2 93 30 view .LVU148
 581 0008 D4F8C830 		ldr	r3, [r4, #200]
  93:Inc/queue.h   ****         return TRUE;
 582              		.loc 2 93 7 view .LVU149
 583 000c 9842     		cmp	r0, r3
 584 000e 01D0     		beq	.L33
 585              	.LBE6:
  96:Inc/queue.h   **** }
 586              		.loc 2 96 12 view .LVU150
 587 0010 0020     		movs	r0, #0
 588              	.L31:
  97:Inc/queue.h   **** 
 589              		.loc 2 97 1 view .LVU151
 590 0012 10BD     		pop	{r4, pc}
 591              	.LVL24:
 592              	.L33:
 593              	.LBB7:
  94:Inc/queue.h   ****     }
 594              		.loc 2 94 16 view .LVU152
 595 0014 0120     		movs	r0, #1
 596 0016 FCE7     		b	.L31
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 19


 597              	.LBE7:
 598              		.cfi_endproc
 599              	.LFE71:
 601              		.section	.text.enQueue,"ax",%progbits
 602              		.align	1
 603              		.global	enQueue
 604              		.syntax unified
 605              		.thumb
 606              		.thumb_func
 607              		.fpu softvfp
 609              	enQueue:
 610              	.LVL25:
 611              	.LFB67:
  53:Inc/queue.h   ****     if(isEmpty(queue)){
 612              		.loc 2 53 47 is_stmt 1 view -0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 0, uses_anonymous_args = 0
  53:Inc/queue.h   ****     if(isEmpty(queue)){
 616              		.loc 2 53 47 is_stmt 0 view .LVU154
 617 0000 70B5     		push	{r4, r5, r6, lr}
 618              	.LCFI11:
 619              		.cfi_def_cfa_offset 16
 620              		.cfi_offset 4, -16
 621              		.cfi_offset 5, -12
 622              		.cfi_offset 6, -8
 623              		.cfi_offset 14, -4
 624 0002 0446     		mov	r4, r0
 625 0004 0D46     		mov	r5, r1
  54:Inc/queue.h   ****         queue->front = queue->rear;
 626              		.loc 2 54 5 is_stmt 1 view .LVU155
  54:Inc/queue.h   ****         queue->front = queue->rear;
 627              		.loc 2 54 8 is_stmt 0 view .LVU156
 628 0006 FFF7FEFF 		bl	isEmpty
 629              	.LVL26:
  54:Inc/queue.h   ****         queue->front = queue->rear;
 630              		.loc 2 54 7 view .LVU157
 631 000a 60B9     		cbnz	r0, .L39
 632 000c 0646     		mov	r6, r0
  58:Inc/queue.h   ****         return FALSE;
 633              		.loc 2 58 12 is_stmt 1 view .LVU158
  58:Inc/queue.h   ****         return FALSE;
 634              		.loc 2 58 16 is_stmt 0 view .LVU159
 635 000e 2046     		mov	r0, r4
 636 0010 FFF7FEFF 		bl	isFull
 637              	.LVL27:
  58:Inc/queue.h   ****         return FALSE;
 638              		.loc 2 58 15 view .LVU160
 639 0014 68B9     		cbnz	r0, .L35
 640              	.LBB8:
  61:Inc/queue.h   ****         queue->message[queue->rear] = data;
 641              		.loc 2 61 9 is_stmt 1 view .LVU161
  61:Inc/queue.h   ****         queue->message[queue->rear] = data;
 642              		.loc 2 61 23 is_stmt 0 view .LVU162
 643 0016 2046     		mov	r0, r4
 644 0018 FFF7FEFF 		bl	nextRear
 645              	.LVL28:
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 20


  61:Inc/queue.h   ****         queue->message[queue->rear] = data;
 646              		.loc 2 61 21 view .LVU163
 647 001c C4F8CC00 		str	r0, [r4, #204]
  62:Inc/queue.h   ****         return TRUE;
 648              		.loc 2 62 9 is_stmt 1 view .LVU164
  62:Inc/queue.h   ****         return TRUE;
 649              		.loc 2 62 37 is_stmt 0 view .LVU165
 650 0020 2554     		strb	r5, [r4, r0]
  63:Inc/queue.h   ****     }
 651              		.loc 2 63 9 is_stmt 1 view .LVU166
  63:Inc/queue.h   ****     }
 652              		.loc 2 63 16 is_stmt 0 view .LVU167
 653 0022 0126     		movs	r6, #1
 654 0024 05E0     		b	.L35
 655              	.L39:
 656              	.LBE8:
  55:Inc/queue.h   ****         queue->message[queue->rear] = data;
 657              		.loc 2 55 9 is_stmt 1 view .LVU168
  55:Inc/queue.h   ****         queue->message[queue->rear] = data;
 658              		.loc 2 55 29 is_stmt 0 view .LVU169
 659 0026 D4F8CC30 		ldr	r3, [r4, #204]
  55:Inc/queue.h   ****         queue->message[queue->rear] = data;
 660              		.loc 2 55 22 view .LVU170
 661 002a C4F8C830 		str	r3, [r4, #200]
  56:Inc/queue.h   ****         return TRUE;
 662              		.loc 2 56 9 is_stmt 1 view .LVU171
  56:Inc/queue.h   ****         return TRUE;
 663              		.loc 2 56 37 is_stmt 0 view .LVU172
 664 002e E554     		strb	r5, [r4, r3]
  57:Inc/queue.h   ****     } else if (isFull(queue)){
 665              		.loc 2 57 9 is_stmt 1 view .LVU173
  57:Inc/queue.h   ****     } else if (isFull(queue)){
 666              		.loc 2 57 16 is_stmt 0 view .LVU174
 667 0030 0126     		movs	r6, #1
 668              	.L35:
  65:Inc/queue.h   **** 
 669              		.loc 2 65 1 view .LVU175
 670 0032 3046     		mov	r0, r6
 671 0034 70BD     		pop	{r4, r5, r6, pc}
  65:Inc/queue.h   **** 
 672              		.loc 2 65 1 view .LVU176
 673              		.cfi_endproc
 674              	.LFE67:
 676              		.section	.text.nextFront,"ax",%progbits
 677              		.align	1
 678              		.global	nextFront
 679              		.syntax unified
 680              		.thumb
 681              		.thumb_func
 682              		.fpu softvfp
 684              	nextFront:
 685              	.LVL29:
 686              	.LFB73:
 102:Inc/queue.h   **** 
 103:Inc/queue.h   **** int nextFront(MessageQueue *queue){
 687              		.loc 2 103 35 is_stmt 1 view -0
 688              		.cfi_startproc
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 21


 689              		@ args = 0, pretend = 0, frame = 0
 690              		@ frame_needed = 0, uses_anonymous_args = 0
 691              		@ link register save eliminated.
 104:Inc/queue.h   ****     return (queue->front + 1) % SIZE;
 692              		.loc 2 104 5 view .LVU178
 693              		.loc 2 104 18 is_stmt 0 view .LVU179
 694 0000 D0F8C830 		ldr	r3, [r0, #200]
 695              		.loc 2 104 26 view .LVU180
 696 0004 0133     		adds	r3, r3, #1
 697              		.loc 2 104 31 view .LVU181
 698 0006 0548     		ldr	r0, .L41
 699              	.LVL30:
 700              		.loc 2 104 31 view .LVU182
 701 0008 80FB0320 		smull	r2, r0, r0, r3
 702 000c DA17     		asrs	r2, r3, #31
 703 000e C2EBA012 		rsb	r2, r2, r0, asr #6
 105:Inc/queue.h   **** }
 704              		.loc 2 105 1 view .LVU183
 705 0012 C820     		movs	r0, #200
 706 0014 00FB1230 		mls	r0, r0, r2, r3
 707 0018 7047     		bx	lr
 708              	.L42:
 709 001a 00BF     		.align	2
 710              	.L41:
 711 001c 1F85EB51 		.word	1374389535
 712              		.cfi_endproc
 713              	.LFE73:
 715              		.section	.text.deQueue,"ax",%progbits
 716              		.align	1
 717              		.global	deQueue
 718              		.syntax unified
 719              		.thumb
 720              		.thumb_func
 721              		.fpu softvfp
 723              	deQueue:
 724              	.LVL31:
 725              	.LFB68:
  67:Inc/queue.h   ****     if(isEmpty(queue)){
 726              		.loc 2 67 37 is_stmt 1 view -0
 727              		.cfi_startproc
 728              		@ args = 0, pretend = 0, frame = 0
 729              		@ frame_needed = 0, uses_anonymous_args = 0
  67:Inc/queue.h   ****     if(isEmpty(queue)){
 730              		.loc 2 67 37 is_stmt 0 view .LVU185
 731 0000 38B5     		push	{r3, r4, r5, lr}
 732              	.LCFI12:
 733              		.cfi_def_cfa_offset 16
 734              		.cfi_offset 3, -16
 735              		.cfi_offset 4, -12
 736              		.cfi_offset 5, -8
 737              		.cfi_offset 14, -4
 738 0002 0446     		mov	r4, r0
  68:Inc/queue.h   ****         return 253;
 739              		.loc 2 68 5 is_stmt 1 view .LVU186
  68:Inc/queue.h   ****         return 253;
 740              		.loc 2 68 8 is_stmt 0 view .LVU187
 741 0004 FFF7FEFF 		bl	isEmpty
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 22


 742              	.LVL32:
  68:Inc/queue.h   ****         return 253;
 743              		.loc 2 68 7 view .LVU188
 744 0008 98B9     		cbnz	r0, .L46
  70:Inc/queue.h   ****         uint8_t temp = queue->message[queue->front];
 745              		.loc 2 70 12 is_stmt 1 view .LVU189
  70:Inc/queue.h   ****         uint8_t temp = queue->message[queue->front];
 746              		.loc 2 70 21 is_stmt 0 view .LVU190
 747 000a D4F8C830 		ldr	r3, [r4, #200]
  70:Inc/queue.h   ****         uint8_t temp = queue->message[queue->front];
 748              		.loc 2 70 35 view .LVU191
 749 000e D4F8CC20 		ldr	r2, [r4, #204]
  70:Inc/queue.h   ****         uint8_t temp = queue->message[queue->front];
 750              		.loc 2 70 15 view .LVU192
 751 0012 9342     		cmp	r3, r2
 752 0014 07D0     		beq	.L48
 753              	.LBB9:
  75:Inc/queue.h   ****         queue->front = nextFront(queue);
 754              		.loc 2 75 9 is_stmt 1 view .LVU193
  75:Inc/queue.h   ****         queue->front = nextFront(queue);
 755              		.loc 2 75 17 is_stmt 0 view .LVU194
 756 0016 E55C     		ldrb	r5, [r4, r3]	@ zero_extendqisi2
 757              	.LVL33:
  76:Inc/queue.h   ****         return temp;
 758              		.loc 2 76 9 is_stmt 1 view .LVU195
  76:Inc/queue.h   ****         return temp;
 759              		.loc 2 76 24 is_stmt 0 view .LVU196
 760 0018 2046     		mov	r0, r4
 761 001a FFF7FEFF 		bl	nextFront
 762              	.LVL34:
  76:Inc/queue.h   ****         return temp;
 763              		.loc 2 76 22 view .LVU197
 764 001e C4F8C800 		str	r0, [r4, #200]
  77:Inc/queue.h   ****     }
 765              		.loc 2 77 9 is_stmt 1 view .LVU198
 766              	.LVL35:
 767              	.L44:
  77:Inc/queue.h   ****     }
 768              		.loc 2 77 9 is_stmt 0 view .LVU199
 769              	.LBE9:
  79:Inc/queue.h   **** 
 770              		.loc 2 79 1 view .LVU200
 771 0022 2846     		mov	r0, r5
 772 0024 38BD     		pop	{r3, r4, r5, pc}
 773              	.LVL36:
 774              	.L48:
 775              	.LBB10:
  71:Inc/queue.h   ****         queue->front = -1;
 776              		.loc 2 71 9 is_stmt 1 view .LVU201
  71:Inc/queue.h   ****         queue->front = -1;
 777              		.loc 2 71 17 is_stmt 0 view .LVU202
 778 0026 E55C     		ldrb	r5, [r4, r3]	@ zero_extendqisi2
 779              	.LVL37:
  72:Inc/queue.h   ****         return temp;
 780              		.loc 2 72 9 is_stmt 1 view .LVU203
  72:Inc/queue.h   ****         return temp;
 781              		.loc 2 72 22 is_stmt 0 view .LVU204
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 23


 782 0028 4FF0FF33 		mov	r3, #-1
 783 002c C4F8C830 		str	r3, [r4, #200]
  73:Inc/queue.h   ****     } else {
 784              		.loc 2 73 9 is_stmt 1 view .LVU205
  73:Inc/queue.h   ****     } else {
 785              		.loc 2 73 16 is_stmt 0 view .LVU206
 786 0030 F7E7     		b	.L44
 787              	.LVL38:
 788              	.L46:
  73:Inc/queue.h   ****     } else {
 789              		.loc 2 73 16 view .LVU207
 790              	.LBE10:
  69:Inc/queue.h   ****     } else if (queue->front==queue->rear){
 791              		.loc 2 69 16 view .LVU208
 792 0032 FD25     		movs	r5, #253
 793 0034 F5E7     		b	.L44
 794              		.cfi_endproc
 795              	.LFE68:
 797              		.section	.text.HAL_UART_RxCpltCallback,"ax",%progbits
 798              		.align	1
 799              		.global	HAL_UART_RxCpltCallback
 800              		.syntax unified
 801              		.thumb
 802              		.thumb_func
 803              		.fpu softvfp
 805              	HAL_UART_RxCpltCallback:
 806              	.LVL39:
 807              	.LFB74:
  46:Src/main.c    ****   uint8_t h1 = rx_buff[HEADER1];
 808              		.loc 1 46 1 is_stmt 1 view -0
 809              		.cfi_startproc
 810              		@ args = 0, pretend = 0, frame = 8
 811              		@ frame_needed = 0, uses_anonymous_args = 0
  46:Src/main.c    ****   uint8_t h1 = rx_buff[HEADER1];
 812              		.loc 1 46 1 is_stmt 0 view .LVU210
 813 0000 70B5     		push	{r4, r5, r6, lr}
 814              	.LCFI13:
 815              		.cfi_def_cfa_offset 16
 816              		.cfi_offset 4, -16
 817              		.cfi_offset 5, -12
 818              		.cfi_offset 6, -8
 819              		.cfi_offset 14, -4
 820 0002 82B0     		sub	sp, sp, #8
 821              	.LCFI14:
 822              		.cfi_def_cfa_offset 24
  47:Src/main.c    ****   uint8_t h2 = rx_buff[HEADER2];
 823              		.loc 1 47 3 is_stmt 1 view .LVU211
 824              	.LVL40:
  48:Src/main.c    ****   uint8_t h3 = rx_buff[HEADER3];
 825              		.loc 1 48 3 view .LVU212
  49:Src/main.c    ****   uint8_t reserved = rx_buff[RESERVED];
 826              		.loc 1 49 3 view .LVU213
  50:Src/main.c    ****   uint8_t id = rx_buff[PACKET_ID];
 827              		.loc 1 50 3 view .LVU214
  51:Src/main.c    ****   uint8_t length1 = rx_buff[LENGTH_LOW];
 828              		.loc 1 51 3 view .LVU215
  51:Src/main.c    ****   uint8_t length1 = rx_buff[LENGTH_LOW];
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 24


 829              		.loc 1 51 11 is_stmt 0 view .LVU216
 830 0004 0F4B     		ldr	r3, .L57
  51:Src/main.c    ****   uint8_t length1 = rx_buff[LENGTH_LOW];
 831              		.loc 1 51 11 view .LVU217
 832 0006 1E79     		ldrb	r6, [r3, #4]	@ zero_extendqisi2
 833              	.LVL41:
  52:Src/main.c    ****   uint8_t length2 = rx_buff[LENGTH_HIGH];
 834              		.loc 1 52 3 is_stmt 1 view .LVU218
  53:Src/main.c    ****   uint16_t message_length = (length2 << 8) + length1;
 835              		.loc 1 53 3 view .LVU219
  53:Src/main.c    ****   uint16_t message_length = (length2 << 8) + length1;
 836              		.loc 1 53 11 is_stmt 0 view .LVU220
 837 0008 9A79     		ldrb	r2, [r3, #6]	@ zero_extendqisi2
 838              	.LVL42:
  54:Src/main.c    ****   volatile uint8_t trash;
 839              		.loc 1 54 3 is_stmt 1 view .LVU221
  54:Src/main.c    ****   volatile uint8_t trash;
 840              		.loc 1 54 44 is_stmt 0 view .LVU222
 841 000a 5D79     		ldrb	r5, [r3, #5]	@ zero_extendqisi2
  54:Src/main.c    ****   volatile uint8_t trash;
 842              		.loc 1 54 12 view .LVU223
 843 000c 05EB0225 		add	r5, r5, r2, lsl #8
 844 0010 ADB2     		uxth	r5, r5
 845              	.LVL43:
  55:Src/main.c    ****   int i;
 846              		.loc 1 55 3 is_stmt 1 view .LVU224
  56:Src/main.c    ****   for (i=8; i<8+message_length; i++){
 847              		.loc 1 56 3 view .LVU225
  57:Src/main.c    ****     if(id==PARAM->ID){
 848              		.loc 1 57 3 view .LVU226
  57:Src/main.c    ****     if(id==PARAM->ID){
 849              		.loc 1 57 9 is_stmt 0 view .LVU227
 850 0012 0824     		movs	r4, #8
  57:Src/main.c    ****     if(id==PARAM->ID){
 851              		.loc 1 57 3 view .LVU228
 852 0014 06E0     		b	.L50
 853              	.LVL44:
 854              	.L56:
  59:Src/main.c    ****     } else {
 855              		.loc 1 59 7 is_stmt 1 view .LVU229
 856 0016 0B4B     		ldr	r3, .L57
 857 0018 195D     		ldrb	r1, [r3, r4]	@ zero_extendqisi2
 858 001a 0B4B     		ldr	r3, .L57+4
 859 001c 1868     		ldr	r0, [r3]
 860 001e FFF7FEFF 		bl	enQueue
 861              	.LVL45:
 862              	.L52:
  57:Src/main.c    ****     if(id==PARAM->ID){
 863              		.loc 1 57 33 discriminator 2 view .LVU230
  57:Src/main.c    ****     if(id==PARAM->ID){
 864              		.loc 1 57 34 is_stmt 0 discriminator 2 view .LVU231
 865 0022 0134     		adds	r4, r4, #1
 866              	.LVL46:
 867              	.L50:
  57:Src/main.c    ****     if(id==PARAM->ID){
 868              		.loc 1 57 13 is_stmt 1 discriminator 1 view .LVU232
  57:Src/main.c    ****     if(id==PARAM->ID){
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 25


 869              		.loc 1 57 14 is_stmt 0 discriminator 1 view .LVU233
 870 0024 EB1D     		adds	r3, r5, #7
  57:Src/main.c    ****     if(id==PARAM->ID){
 871              		.loc 1 57 3 discriminator 1 view .LVU234
 872 0026 A342     		cmp	r3, r4
 873 0028 09DB     		blt	.L55
  58:Src/main.c    ****       enQueue(message, rx_buff[i]);
 874              		.loc 1 58 5 is_stmt 1 view .LVU235
  58:Src/main.c    ****       enQueue(message, rx_buff[i]);
 875              		.loc 1 58 17 is_stmt 0 view .LVU236
 876 002a 084B     		ldr	r3, .L57+8
 877 002c 1B68     		ldr	r3, [r3]
 878 002e 1B68     		ldr	r3, [r3]
  58:Src/main.c    ****       enQueue(message, rx_buff[i]);
 879              		.loc 1 58 7 view .LVU237
 880 0030 9E42     		cmp	r6, r3
 881 0032 F0D0     		beq	.L56
  61:Src/main.c    ****     }    
 882              		.loc 1 61 7 is_stmt 1 view .LVU238
  61:Src/main.c    ****     }    
 883              		.loc 1 61 22 is_stmt 0 view .LVU239
 884 0034 034B     		ldr	r3, .L57
 885 0036 1B5D     		ldrb	r3, [r3, r4]	@ zero_extendqisi2
  61:Src/main.c    ****     }    
 886              		.loc 1 61 13 view .LVU240
 887 0038 8DF80730 		strb	r3, [sp, #7]
 888 003c F1E7     		b	.L52
 889              	.L55:
  64:Src/main.c    **** 
 890              		.loc 1 64 1 view .LVU241
 891 003e 02B0     		add	sp, sp, #8
 892              	.LCFI15:
 893              		.cfi_def_cfa_offset 16
 894              		@ sp needed
 895 0040 70BD     		pop	{r4, r5, r6, pc}
 896              	.LVL47:
 897              	.L58:
  64:Src/main.c    **** 
 898              		.loc 1 64 1 view .LVU242
 899 0042 00BF     		.align	2
 900              	.L57:
 901 0044 00000000 		.word	rx_buff
 902 0048 00000000 		.word	message
 903 004c 00000000 		.word	PARAM
 904              		.cfi_endproc
 905              	.LFE74:
 907              		.global	__aeabi_ui2f
 908              		.global	__aeabi_fmul
 909              		.global	__aeabi_f2uiz
 910              		.section	.text.angleToHex,"ax",%progbits
 911              		.align	1
 912              		.global	angleToHex
 913              		.syntax unified
 914              		.thumb
 915              		.thumb_func
 916              		.fpu softvfp
 918              	angleToHex:
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 26


 919              	.LVL48:
 920              	.LFB76:
 123:Src/main.c    ****   float factor = (4096.0/360.0);
 921              		.loc 1 123 36 is_stmt 1 view -0
 922              		.cfi_startproc
 923              		@ args = 0, pretend = 0, frame = 0
 924              		@ frame_needed = 0, uses_anonymous_args = 0
 123:Src/main.c    ****   float factor = (4096.0/360.0);
 925              		.loc 1 123 36 is_stmt 0 view .LVU244
 926 0000 08B5     		push	{r3, lr}
 927              	.LCFI16:
 928              		.cfi_def_cfa_offset 8
 929              		.cfi_offset 3, -8
 930              		.cfi_offset 14, -4
 124:Src/main.c    ****   float conversion = (float)angle * factor; 
 931              		.loc 1 124 3 is_stmt 1 view .LVU245
 932              	.LVL49:
 125:Src/main.c    ****   return conversion;
 933              		.loc 1 125 3 view .LVU246
 125:Src/main.c    ****   return conversion;
 934              		.loc 1 125 22 is_stmt 0 view .LVU247
 935 0002 FFF7FEFF 		bl	__aeabi_ui2f
 936              	.LVL50:
 125:Src/main.c    ****   return conversion;
 937              		.loc 1 125 9 view .LVU248
 938 0006 0349     		ldr	r1, .L61
 939 0008 FFF7FEFF 		bl	__aeabi_fmul
 940              	.LVL51:
 126:Src/main.c    **** }
 941              		.loc 1 126 3 is_stmt 1 view .LVU249
 126:Src/main.c    **** }
 942              		.loc 1 126 10 is_stmt 0 view .LVU250
 943 000c FFF7FEFF 		bl	__aeabi_f2uiz
 944              	.LVL52:
 127:Src/main.c    **** 
 945              		.loc 1 127 1 view .LVU251
 946 0010 80B2     		uxth	r0, r0
 947 0012 08BD     		pop	{r3, pc}
 948              	.L62:
 949              		.align	2
 950              	.L61:
 951 0014 610B3641 		.word	1094060897
 952              		.cfi_endproc
 953              	.LFE76:
 955              		.section	.text.SystemClock_Config,"ax",%progbits
 956              		.align	1
 957              		.global	SystemClock_Config
 958              		.syntax unified
 959              		.thumb
 960              		.thumb_func
 961              		.fpu softvfp
 963              	SystemClock_Config:
 964              	.LFB77:
 134:Src/main.c    ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 965              		.loc 1 134 1 is_stmt 1 view -0
 966              		.cfi_startproc
 967              		@ args = 0, pretend = 0, frame = 64
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 27


 968              		@ frame_needed = 0, uses_anonymous_args = 0
 969 0000 10B5     		push	{r4, lr}
 970              	.LCFI17:
 971              		.cfi_def_cfa_offset 8
 972              		.cfi_offset 4, -8
 973              		.cfi_offset 14, -4
 974 0002 90B0     		sub	sp, sp, #64
 975              	.LCFI18:
 976              		.cfi_def_cfa_offset 72
 135:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 977              		.loc 1 135 3 view .LVU253
 135:Src/main.c    ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 978              		.loc 1 135 22 is_stmt 0 view .LVU254
 979 0004 2422     		movs	r2, #36
 980 0006 0021     		movs	r1, #0
 981 0008 07A8     		add	r0, sp, #28
 982 000a FFF7FEFF 		bl	memset
 983              	.LVL53:
 136:Src/main.c    **** 
 984              		.loc 1 136 3 is_stmt 1 view .LVU255
 136:Src/main.c    **** 
 985              		.loc 1 136 22 is_stmt 0 view .LVU256
 986 000e 0024     		movs	r4, #0
 987 0010 0194     		str	r4, [sp, #4]
 988 0012 0294     		str	r4, [sp, #8]
 989 0014 0394     		str	r4, [sp, #12]
 990 0016 0494     		str	r4, [sp, #16]
 991 0018 0594     		str	r4, [sp, #20]
 140:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 992              		.loc 1 140 3 is_stmt 1 view .LVU257
 140:Src/main.c    ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 993              		.loc 1 140 36 is_stmt 0 view .LVU258
 994 001a 0223     		movs	r3, #2
 995 001c 0693     		str	r3, [sp, #24]
 141:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 996              		.loc 1 141 3 is_stmt 1 view .LVU259
 141:Src/main.c    ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 997              		.loc 1 141 30 is_stmt 0 view .LVU260
 998 001e 0123     		movs	r3, #1
 999 0020 0A93     		str	r3, [sp, #40]
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1000              		.loc 1 142 3 is_stmt 1 view .LVU261
 142:Src/main.c    ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1001              		.loc 1 142 41 is_stmt 0 view .LVU262
 1002 0022 1023     		movs	r3, #16
 1003 0024 0B93     		str	r3, [sp, #44]
 143:Src/main.c    ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1004              		.loc 1 143 3 is_stmt 1 view .LVU263
 144:Src/main.c    ****   {
 1005              		.loc 1 144 3 view .LVU264
 144:Src/main.c    ****   {
 1006              		.loc 1 144 7 is_stmt 0 view .LVU265
 1007 0026 06A8     		add	r0, sp, #24
 1008 0028 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1009              	.LVL54:
 150:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1010              		.loc 1 150 3 is_stmt 1 view .LVU266
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 28


 150:Src/main.c    ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 1011              		.loc 1 150 31 is_stmt 0 view .LVU267
 1012 002c 0F23     		movs	r3, #15
 1013 002e 0193     		str	r3, [sp, #4]
 152:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1014              		.loc 1 152 3 is_stmt 1 view .LVU268
 152:Src/main.c    ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1015              		.loc 1 152 34 is_stmt 0 view .LVU269
 1016 0030 0294     		str	r4, [sp, #8]
 153:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1017              		.loc 1 153 3 is_stmt 1 view .LVU270
 153:Src/main.c    ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1018              		.loc 1 153 35 is_stmt 0 view .LVU271
 1019 0032 0394     		str	r4, [sp, #12]
 154:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1020              		.loc 1 154 3 is_stmt 1 view .LVU272
 154:Src/main.c    ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 1021              		.loc 1 154 36 is_stmt 0 view .LVU273
 1022 0034 0494     		str	r4, [sp, #16]
 155:Src/main.c    ****   
 1023              		.loc 1 155 3 is_stmt 1 view .LVU274
 155:Src/main.c    ****   
 1024              		.loc 1 155 36 is_stmt 0 view .LVU275
 1025 0036 0594     		str	r4, [sp, #20]
 157:Src/main.c    ****   {
 1026              		.loc 1 157 3 is_stmt 1 view .LVU276
 157:Src/main.c    ****   {
 1027              		.loc 1 157 7 is_stmt 0 view .LVU277
 1028 0038 2146     		mov	r1, r4
 1029 003a 01A8     		add	r0, sp, #4
 1030 003c FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1031              	.LVL55:
 161:Src/main.c    **** 
 1032              		.loc 1 161 1 view .LVU278
 1033 0040 10B0     		add	sp, sp, #64
 1034              	.LCFI19:
 1035              		.cfi_def_cfa_offset 8
 1036              		@ sp needed
 1037 0042 10BD     		pop	{r4, pc}
 1038              		.cfi_endproc
 1039              	.LFE77:
 1041              		.section	.text.main,"ax",%progbits
 1042              		.align	1
 1043              		.global	main
 1044              		.syntax unified
 1045              		.thumb
 1046              		.thumb_func
 1047              		.fpu softvfp
 1049              	main:
 1050              	.LFB75:
  70:Src/main.c    ****   
 1051              		.loc 1 70 1 is_stmt 1 view -0
 1052              		.cfi_startproc
 1053              		@ args = 0, pretend = 0, frame = 0
 1054              		@ frame_needed = 0, uses_anonymous_args = 0
 1055 0000 08B5     		push	{r3, lr}
 1056              	.LCFI20:
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 29


 1057              		.cfi_def_cfa_offset 8
 1058              		.cfi_offset 3, -8
 1059              		.cfi_offset 14, -4
  73:Src/main.c    ****   SystemClock_Config();
 1060              		.loc 1 73 3 view .LVU280
 1061 0002 FFF7FEFF 		bl	HAL_Init
 1062              	.LVL56:
  74:Src/main.c    ****   MX_GPIO_Init();
 1063              		.loc 1 74 3 view .LVU281
 1064 0006 FFF7FEFF 		bl	SystemClock_Config
 1065              	.LVL57:
  75:Src/main.c    ****   MX_DMA_Init();
 1066              		.loc 1 75 3 view .LVU282
 1067 000a FFF7FEFF 		bl	MX_GPIO_Init
 1068              	.LVL58:
  76:Src/main.c    ****   MX_I2C2_Init();
 1069              		.loc 1 76 3 view .LVU283
 1070 000e FFF7FEFF 		bl	MX_DMA_Init
 1071              	.LVL59:
  77:Src/main.c    ****   MX_USART1_UART_Init();
 1072              		.loc 1 77 3 view .LVU284
 1073 0012 FFF7FEFF 		bl	MX_I2C2_Init
 1074              	.LVL60:
  78:Src/main.c    ****  	DWT_Init();
 1075              		.loc 1 78 3 view .LVU285
 1076 0016 FFF7FEFF 		bl	MX_USART1_UART_Init
 1077              	.LVL61:
  79:Src/main.c    **** 	DRV8825_initStepper();
 1078              		.loc 1 79 3 view .LVU286
 1079 001a FFF7FEFF 		bl	DWT_Init
 1080              	.LVL62:
  80:Src/main.c    ****   AS5600_SetZero();
 1081              		.loc 1 80 2 view .LVU287
 1082 001e FFF7FEFF 		bl	DRV8825_initStepper
 1083              	.LVL63:
  81:Src/main.c    ****   HAL_GPIO_WritePin(DATA_DIR_GPIO_Port, DATA_DIR_Pin, 0);
 1084              		.loc 1 81 3 view .LVU288
 1085 0022 FFF7FEFF 		bl	AS5600_SetZero
 1086              	.LVL64:
  82:Src/main.c    ****   HAL_UART_Receive_DMA(&huart1, rx_buff, sizeof(rx_buff));
 1087              		.loc 1 82 3 view .LVU289
 1088 0026 0022     		movs	r2, #0
 1089 0028 2021     		movs	r1, #32
 1090 002a 0A48     		ldr	r0, .L68
 1091 002c FFF7FEFF 		bl	HAL_GPIO_WritePin
 1092              	.LVL65:
  83:Src/main.c    ****   //HAL_UART_Receive_IT(&huart1, rx_buff, sizeof(rx_buff));
 1093              		.loc 1 83 3 view .LVU290
 1094 0030 1422     		movs	r2, #20
 1095 0032 0949     		ldr	r1, .L68+4
 1096 0034 0948     		ldr	r0, .L68+8
 1097 0036 FFF7FEFF 		bl	HAL_UART_Receive_DMA
 1098              	.LVL66:
  88:Src/main.c    **** 
 1099              		.loc 1 88 3 view .LVU291
  90:Src/main.c    ****   PARAM = initializeParameters(5, 57600);
 1100              		.loc 1 90 3 view .LVU292
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 30


  90:Src/main.c    ****   PARAM = initializeParameters(5, 57600);
 1101              		.loc 1 90 13 is_stmt 0 view .LVU293
 1102 003a FFF7FEFF 		bl	constructMessage
 1103              	.LVL67:
  90:Src/main.c    ****   PARAM = initializeParameters(5, 57600);
 1104              		.loc 1 90 11 view .LVU294
 1105 003e 084B     		ldr	r3, .L68+12
 1106 0040 1860     		str	r0, [r3]
  91:Src/main.c    **** 
 1107              		.loc 1 91 3 is_stmt 1 view .LVU295
  91:Src/main.c    **** 
 1108              		.loc 1 91 11 is_stmt 0 view .LVU296
 1109 0042 4FF46141 		mov	r1, #57600
 1110 0046 0520     		movs	r0, #5
 1111 0048 FFF7FEFF 		bl	initializeParameters
 1112              	.LVL68:
  91:Src/main.c    **** 
 1113              		.loc 1 91 9 view .LVU297
 1114 004c 054B     		ldr	r3, .L68+16
 1115 004e 1860     		str	r0, [r3]
  93:Src/main.c    ****   while(1){
 1116              		.loc 1 93 3 is_stmt 1 view .LVU298
 1117              	.LVL69:
 1118              	.L66:
  94:Src/main.c    ****     
 1119              		.loc 1 94 3 discriminator 1 view .LVU299
  98:Src/main.c    **** 
 1120              		.loc 1 98 3 discriminator 1 view .LVU300
  94:Src/main.c    ****     
 1121              		.loc 1 94 8 discriminator 1 view .LVU301
 1122 0050 FEE7     		b	.L66
 1123              	.L69:
 1124 0052 00BF     		.align	2
 1125              	.L68:
 1126 0054 000C0140 		.word	1073810432
 1127 0058 00000000 		.word	rx_buff
 1128 005c 00000000 		.word	huart1
 1129 0060 00000000 		.word	message
 1130 0064 00000000 		.word	PARAM
 1131              		.cfi_endproc
 1132              	.LFE75:
 1134              		.section	.text.Error_Handler,"ax",%progbits
 1135              		.align	1
 1136              		.global	Error_Handler
 1137              		.syntax unified
 1138              		.thumb
 1139              		.thumb_func
 1140              		.fpu softvfp
 1142              	Error_Handler:
 1143              	.LFB82:
 284:Src/main.c    **** 
 285:Src/main.c    **** 
 286:Src/main.c    **** /**
 287:Src/main.c    ****   * @brief  This function is executed in case of error occurrence.
 288:Src/main.c    ****   * @retval None
 289:Src/main.c    ****   */
 290:Src/main.c    **** void Error_Handler(void)
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 31


 291:Src/main.c    **** {
 1144              		.loc 1 291 1 view -0
 1145              		.cfi_startproc
 1146              		@ args = 0, pretend = 0, frame = 0
 1147              		@ frame_needed = 0, uses_anonymous_args = 0
 1148              		@ link register save eliminated.
 292:Src/main.c    ****   /* USER CODE BEGIN Error_Handler_Debug */
 293:Src/main.c    ****   /* User can add his own implementation to report the HAL error return state */
 294:Src/main.c    **** 
 295:Src/main.c    ****   /* USER CODE END Error_Handler_Debug */
 296:Src/main.c    **** }
 1149              		.loc 1 296 1 view .LVU303
 1150 0000 7047     		bx	lr
 1151              		.cfi_endproc
 1152              	.LFE82:
 1154              		.comm	rx_buff,20,4
 1155              		.comm	PARAM,4,4
 1156              		.comm	message,4,4
 1157              		.comm	hdma_usart1_rx,68,4
 1158              		.comm	huart1,64,4
 1159              		.comm	hi2c2,84,4
 1160              		.text
 1161              	.Letext0:
 1162              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 1163              		.file 4 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 1164              		.file 5 "Drivers/CMSIS/Include/core_cm3.h"
 1165              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1166              		.file 7 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1167              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1168              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1169              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1170              		.file 11 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1171              		.file 12 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 1172              		.file 13 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_i2c.h"
 1173              		.file 14 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 1174              		.file 15 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 1175              		.file 16 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 1176              		.file 17 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 1177              		.file 18 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\lib\\gcc\\arm-none-eab
 1178              		.file 19 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 1179              		.file 20 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 1180              		.file 21 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 1181              		.file 22 "<built-in>"
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 32


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:16     .text.MX_GPIO_Init:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:23     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:156    .text.MX_GPIO_Init:00000098 $d
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:163    .text.MX_DMA_Init:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:169    .text.MX_DMA_Init:00000000 MX_DMA_Init
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:217    .text.MX_DMA_Init:00000030 $d
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:222    .text.MX_I2C2_Init:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:228    .text.MX_I2C2_Init:00000000 MX_I2C2_Init
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:280    .text.MX_I2C2_Init:00000028 $d
                            *COM*:00000054 hi2c2
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:287    .text.MX_USART1_UART_Init:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:293    .text.MX_USART1_UART_Init:00000000 MX_USART1_UART_Init
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:342    .text.MX_USART1_UART_Init:00000024 $d
                            *COM*:00000040 huart1
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:348    .text.initializeParameters:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:355    .text.initializeParameters:00000000 initializeParameters
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:394    .text.constructMessage:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:401    .text.constructMessage:00000000 constructMessage
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:451    .text.peek:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:458    .text.peek:00000000 peek
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:478    .text.isEmpty:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:485    .text.isEmpty:00000000 isEmpty
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:515    .text.nextRear:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:522    .text.nextRear:00000000 nextRear
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:549    .text.nextRear:0000001c $d
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:554    .text.isFull:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:561    .text.isFull:00000000 isFull
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:602    .text.enQueue:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:609    .text.enQueue:00000000 enQueue
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:677    .text.nextFront:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:684    .text.nextFront:00000000 nextFront
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:711    .text.nextFront:0000001c $d
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:716    .text.deQueue:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:723    .text.deQueue:00000000 deQueue
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:798    .text.HAL_UART_RxCpltCallback:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:805    .text.HAL_UART_RxCpltCallback:00000000 HAL_UART_RxCpltCallback
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:901    .text.HAL_UART_RxCpltCallback:00000044 $d
                            *COM*:00000014 rx_buff
                            *COM*:00000004 message
                            *COM*:00000004 PARAM
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:911    .text.angleToHex:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:918    .text.angleToHex:00000000 angleToHex
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:951    .text.angleToHex:00000014 $d
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:956    .text.SystemClock_Config:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:963    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:1042   .text.main:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:1049   .text.main:00000000 main
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:1126   .text.main:00000054 $d
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:1135   .text.Error_Handler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s:1142   .text.Error_Handler:00000000 Error_Handler
                            *COM*:00000044 hdma_usart1_rx

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_GPIO_Init
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccpX2olC.s 			page 33


HAL_NVIC_SetPriority
HAL_NVIC_EnableIRQ
HAL_I2C_Init
HAL_UART_Init
malloc
__aeabi_ui2f
__aeabi_fmul
__aeabi_f2uiz
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
DWT_Init
DRV8825_initStepper
AS5600_SetZero
HAL_UART_Receive_DMA
