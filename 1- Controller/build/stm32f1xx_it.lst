ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB527:
  26              		.file 1 "Src/stm32f1xx_it.c"
   1:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f1xx_it.c **** /**
   3:Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Src/stm32f1xx_it.c ****   * @attention
   8:Src/stm32f1xx_it.c ****   *
   9:Src/stm32f1xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/stm32f1xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f1xx_it.c ****   *
  12:Src/stm32f1xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f1xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f1xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32f1xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f1xx_it.c ****   *
  17:Src/stm32f1xx_it.c ****   ******************************************************************************
  18:Src/stm32f1xx_it.c ****   */
  19:Src/stm32f1xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f1xx_it.c **** 
  21:Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f1xx_it.c **** #include "main.h"
  23:Src/stm32f1xx_it.c **** #include "queue.h"
  24:Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  25:Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  26:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  27:Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  28:Src/stm32f1xx_it.c **** 
  29:Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  30:Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  31:Src/stm32f1xx_it.c **** 
  32:Src/stm32f1xx_it.c **** /* USER CODE END TD */
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s 			page 2


  33:Src/stm32f1xx_it.c **** 
  34:Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  35:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  36:Src/stm32f1xx_it.c ****  
  37:Src/stm32f1xx_it.c **** /* USER CODE END PD */
  38:Src/stm32f1xx_it.c **** 
  39:Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  40:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  41:Src/stm32f1xx_it.c **** 
  42:Src/stm32f1xx_it.c **** /* USER CODE END PM */
  43:Src/stm32f1xx_it.c **** 
  44:Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  46:Src/stm32f1xx_it.c **** 
  47:Src/stm32f1xx_it.c **** /* USER CODE END PV */
  48:Src/stm32f1xx_it.c **** 
  49:Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  50:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  51:Src/stm32f1xx_it.c **** 
  52:Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  53:Src/stm32f1xx_it.c **** 
  54:Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  55:Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  56:Src/stm32f1xx_it.c **** 
  57:Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  58:Src/stm32f1xx_it.c **** 
  59:Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  60:Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  61:Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  62:Src/stm32f1xx_it.c **** extern UART_HandleTypeDef huart1;
  63:Src/stm32f1xx_it.c **** extern MessageQueue *message;
  64:Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  65:Src/stm32f1xx_it.c **** 
  66:Src/stm32f1xx_it.c **** /* USER CODE END EV */
  67:Src/stm32f1xx_it.c **** 
  68:Src/stm32f1xx_it.c **** /******************************************************************************/
  69:Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */ 
  70:Src/stm32f1xx_it.c **** /******************************************************************************/
  71:Src/stm32f1xx_it.c **** /**
  72:Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  73:Src/stm32f1xx_it.c ****   */
  74:Src/stm32f1xx_it.c **** void NMI_Handler(void)
  75:Src/stm32f1xx_it.c **** {
  27              		.loc 1 75 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  76:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  77:Src/stm32f1xx_it.c **** 
  78:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  79:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  80:Src/stm32f1xx_it.c **** 
  81:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  82:Src/stm32f1xx_it.c **** }
  32              		.loc 1 82 1 view .LVU1
  33 0000 7047     		bx	lr
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s 			page 3


  34              		.cfi_endproc
  35              	.LFE527:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu softvfp
  45              	HardFault_Handler:
  46              	.LFB528:
  83:Src/stm32f1xx_it.c **** 
  84:Src/stm32f1xx_it.c **** /**
  85:Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  86:Src/stm32f1xx_it.c ****   */
  87:Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  88:Src/stm32f1xx_it.c **** {
  47              		.loc 1 88 1 view -0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52 0000 08B5     		push	{r3, lr}
  53              	.LCFI0:
  54              		.cfi_def_cfa_offset 8
  55              		.cfi_offset 3, -8
  56              		.cfi_offset 14, -4
  57              	.L3:
  89:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  90:Src/stm32f1xx_it.c **** 
  91:Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  92:Src/stm32f1xx_it.c ****   while (1)
  58              		.loc 1 92 3 discriminator 1 view .LVU3
  93:Src/stm32f1xx_it.c ****   {
  94:Src/stm32f1xx_it.c ****     isEmpty(message);
  59              		.loc 1 94 5 discriminator 1 view .LVU4
  60 0002 024B     		ldr	r3, .L5
  61 0004 1868     		ldr	r0, [r3]
  62 0006 FFF7FEFF 		bl	isEmpty
  63              	.LVL0:
  92:Src/stm32f1xx_it.c ****   {
  64              		.loc 1 92 9 discriminator 1 view .LVU5
  65 000a FAE7     		b	.L3
  66              	.L6:
  67              		.align	2
  68              	.L5:
  69 000c 00000000 		.word	message
  70              		.cfi_endproc
  71              	.LFE528:
  73              		.section	.text.MemManage_Handler,"ax",%progbits
  74              		.align	1
  75              		.global	MemManage_Handler
  76              		.syntax unified
  77              		.thumb
  78              		.thumb_func
  79              		.fpu softvfp
  81              	MemManage_Handler:
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s 			page 4


  82              	.LFB529:
  95:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  96:Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  97:Src/stm32f1xx_it.c ****   }
  98:Src/stm32f1xx_it.c **** }
  99:Src/stm32f1xx_it.c **** 
 100:Src/stm32f1xx_it.c **** /**
 101:Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
 102:Src/stm32f1xx_it.c ****   */
 103:Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 104:Src/stm32f1xx_it.c **** {
  83              		.loc 1 104 1 view -0
  84              		.cfi_startproc
  85              		@ Volatile: function does not return.
  86              		@ args = 0, pretend = 0, frame = 0
  87              		@ frame_needed = 0, uses_anonymous_args = 0
  88              		@ link register save eliminated.
  89              	.L8:
 105:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 106:Src/stm32f1xx_it.c **** 
 107:Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 108:Src/stm32f1xx_it.c ****   while (1)
  90              		.loc 1 108 3 discriminator 1 view .LVU7
 109:Src/stm32f1xx_it.c ****   {
 110:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 111:Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 112:Src/stm32f1xx_it.c ****   }
  91              		.loc 1 112 3 discriminator 1 view .LVU8
 108:Src/stm32f1xx_it.c ****   {
  92              		.loc 1 108 9 discriminator 1 view .LVU9
  93 0000 FEE7     		b	.L8
  94              		.cfi_endproc
  95              	.LFE529:
  97              		.section	.text.BusFault_Handler,"ax",%progbits
  98              		.align	1
  99              		.global	BusFault_Handler
 100              		.syntax unified
 101              		.thumb
 102              		.thumb_func
 103              		.fpu softvfp
 105              	BusFault_Handler:
 106              	.LFB530:
 113:Src/stm32f1xx_it.c **** }
 114:Src/stm32f1xx_it.c **** 
 115:Src/stm32f1xx_it.c **** /**
 116:Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 117:Src/stm32f1xx_it.c ****   */
 118:Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 119:Src/stm32f1xx_it.c **** {
 107              		.loc 1 119 1 view -0
 108              		.cfi_startproc
 109              		@ Volatile: function does not return.
 110              		@ args = 0, pretend = 0, frame = 0
 111              		@ frame_needed = 0, uses_anonymous_args = 0
 112              		@ link register save eliminated.
 113              	.L10:
 120:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s 			page 5


 121:Src/stm32f1xx_it.c **** 
 122:Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 123:Src/stm32f1xx_it.c ****   while (1)
 114              		.loc 1 123 3 discriminator 1 view .LVU11
 124:Src/stm32f1xx_it.c ****   {
 125:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 126:Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 127:Src/stm32f1xx_it.c ****   }
 115              		.loc 1 127 3 discriminator 1 view .LVU12
 123:Src/stm32f1xx_it.c ****   {
 116              		.loc 1 123 9 discriminator 1 view .LVU13
 117 0000 FEE7     		b	.L10
 118              		.cfi_endproc
 119              	.LFE530:
 121              		.section	.text.UsageFault_Handler,"ax",%progbits
 122              		.align	1
 123              		.global	UsageFault_Handler
 124              		.syntax unified
 125              		.thumb
 126              		.thumb_func
 127              		.fpu softvfp
 129              	UsageFault_Handler:
 130              	.LFB531:
 128:Src/stm32f1xx_it.c **** }
 129:Src/stm32f1xx_it.c **** 
 130:Src/stm32f1xx_it.c **** /**
 131:Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 132:Src/stm32f1xx_it.c ****   */
 133:Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 134:Src/stm32f1xx_it.c **** {
 131              		.loc 1 134 1 view -0
 132              		.cfi_startproc
 133              		@ Volatile: function does not return.
 134              		@ args = 0, pretend = 0, frame = 0
 135              		@ frame_needed = 0, uses_anonymous_args = 0
 136              		@ link register save eliminated.
 137              	.L12:
 135:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 136:Src/stm32f1xx_it.c **** 
 137:Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 138:Src/stm32f1xx_it.c ****   while (1)
 138              		.loc 1 138 3 discriminator 1 view .LVU15
 139:Src/stm32f1xx_it.c ****   {
 140:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 141:Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 142:Src/stm32f1xx_it.c ****   }
 139              		.loc 1 142 3 discriminator 1 view .LVU16
 138:Src/stm32f1xx_it.c ****   {
 140              		.loc 1 138 9 discriminator 1 view .LVU17
 141 0000 FEE7     		b	.L12
 142              		.cfi_endproc
 143              	.LFE531:
 145              		.section	.text.SVC_Handler,"ax",%progbits
 146              		.align	1
 147              		.global	SVC_Handler
 148              		.syntax unified
 149              		.thumb
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s 			page 6


 150              		.thumb_func
 151              		.fpu softvfp
 153              	SVC_Handler:
 154              	.LFB532:
 143:Src/stm32f1xx_it.c **** }
 144:Src/stm32f1xx_it.c **** 
 145:Src/stm32f1xx_it.c **** /**
 146:Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 147:Src/stm32f1xx_it.c ****   */
 148:Src/stm32f1xx_it.c **** void SVC_Handler(void)
 149:Src/stm32f1xx_it.c **** {
 155              		.loc 1 149 1 view -0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 0, uses_anonymous_args = 0
 159              		@ link register save eliminated.
 150:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 151:Src/stm32f1xx_it.c **** 
 152:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 153:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 154:Src/stm32f1xx_it.c **** 
 155:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 156:Src/stm32f1xx_it.c **** }
 160              		.loc 1 156 1 view .LVU19
 161 0000 7047     		bx	lr
 162              		.cfi_endproc
 163              	.LFE532:
 165              		.section	.text.DebugMon_Handler,"ax",%progbits
 166              		.align	1
 167              		.global	DebugMon_Handler
 168              		.syntax unified
 169              		.thumb
 170              		.thumb_func
 171              		.fpu softvfp
 173              	DebugMon_Handler:
 174              	.LFB533:
 157:Src/stm32f1xx_it.c **** 
 158:Src/stm32f1xx_it.c **** /**
 159:Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 160:Src/stm32f1xx_it.c ****   */
 161:Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 162:Src/stm32f1xx_it.c **** {
 175              		.loc 1 162 1 view -0
 176              		.cfi_startproc
 177              		@ args = 0, pretend = 0, frame = 0
 178              		@ frame_needed = 0, uses_anonymous_args = 0
 179              		@ link register save eliminated.
 163:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 164:Src/stm32f1xx_it.c **** 
 165:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 166:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 167:Src/stm32f1xx_it.c **** 
 168:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
 169:Src/stm32f1xx_it.c **** }
 180              		.loc 1 169 1 view .LVU21
 181 0000 7047     		bx	lr
 182              		.cfi_endproc
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s 			page 7


 183              	.LFE533:
 185              		.section	.text.PendSV_Handler,"ax",%progbits
 186              		.align	1
 187              		.global	PendSV_Handler
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 191              		.fpu softvfp
 193              	PendSV_Handler:
 194              	.LFB534:
 170:Src/stm32f1xx_it.c **** 
 171:Src/stm32f1xx_it.c **** /**
 172:Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 173:Src/stm32f1xx_it.c ****   */
 174:Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 175:Src/stm32f1xx_it.c **** {
 195              		.loc 1 175 1 view -0
 196              		.cfi_startproc
 197              		@ args = 0, pretend = 0, frame = 0
 198              		@ frame_needed = 0, uses_anonymous_args = 0
 199              		@ link register save eliminated.
 176:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 177:Src/stm32f1xx_it.c **** 
 178:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 179:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 180:Src/stm32f1xx_it.c **** 
 181:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 182:Src/stm32f1xx_it.c **** }
 200              		.loc 1 182 1 view .LVU23
 201 0000 7047     		bx	lr
 202              		.cfi_endproc
 203              	.LFE534:
 205              		.section	.text.SysTick_Handler,"ax",%progbits
 206              		.align	1
 207              		.global	SysTick_Handler
 208              		.syntax unified
 209              		.thumb
 210              		.thumb_func
 211              		.fpu softvfp
 213              	SysTick_Handler:
 214              	.LFB535:
 183:Src/stm32f1xx_it.c **** 
 184:Src/stm32f1xx_it.c **** /**
 185:Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 186:Src/stm32f1xx_it.c ****   */
 187:Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 188:Src/stm32f1xx_it.c **** {
 215              		.loc 1 188 1 view -0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219 0000 08B5     		push	{r3, lr}
 220              	.LCFI1:
 221              		.cfi_def_cfa_offset 8
 222              		.cfi_offset 3, -8
 223              		.cfi_offset 14, -4
 189:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s 			page 8


 190:Src/stm32f1xx_it.c ****   
 191:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 192:Src/stm32f1xx_it.c ****   HAL_IncTick();
 224              		.loc 1 192 3 view .LVU25
 225 0002 FFF7FEFF 		bl	HAL_IncTick
 226              	.LVL1:
 193:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 194:Src/stm32f1xx_it.c **** 
 195:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 196:Src/stm32f1xx_it.c **** }
 227              		.loc 1 196 1 is_stmt 0 view .LVU26
 228 0006 08BD     		pop	{r3, pc}
 229              		.cfi_endproc
 230              	.LFE535:
 232              		.section	.text.DMA1_Channel5_IRQHandler,"ax",%progbits
 233              		.align	1
 234              		.global	DMA1_Channel5_IRQHandler
 235              		.syntax unified
 236              		.thumb
 237              		.thumb_func
 238              		.fpu softvfp
 240              	DMA1_Channel5_IRQHandler:
 241              	.LFB536:
 197:Src/stm32f1xx_it.c **** 
 198:Src/stm32f1xx_it.c **** /******************************************************************************/
 199:Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 200:Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 201:Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 202:Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 203:Src/stm32f1xx_it.c **** /******************************************************************************/
 204:Src/stm32f1xx_it.c **** 
 205:Src/stm32f1xx_it.c **** 
 206:Src/stm32f1xx_it.c **** /**
 207:Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel5 global interrupt.
 208:Src/stm32f1xx_it.c ****   */
 209:Src/stm32f1xx_it.c **** void DMA1_Channel5_IRQHandler(void)
 210:Src/stm32f1xx_it.c **** {
 242              		.loc 1 210 1 is_stmt 1 view -0
 243              		.cfi_startproc
 244              		@ args = 0, pretend = 0, frame = 0
 245              		@ frame_needed = 0, uses_anonymous_args = 0
 246 0000 08B5     		push	{r3, lr}
 247              	.LCFI2:
 248              		.cfi_def_cfa_offset 8
 249              		.cfi_offset 3, -8
 250              		.cfi_offset 14, -4
 211:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 0 */
 212:Src/stm32f1xx_it.c **** 
 213:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 0 */
 214:Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 251              		.loc 1 214 3 view .LVU28
 252 0002 0348     		ldr	r0, .L20
 253 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 254              	.LVL2:
 215:Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 255              		.loc 1 215 3 view .LVU29
 256 0008 0248     		ldr	r0, .L20+4
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s 			page 9


 257 000a FFF7FEFF 		bl	HAL_DMA_IRQHandler
 258              	.LVL3:
 216:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 1 */
 217:Src/stm32f1xx_it.c **** 
 218:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 1 */
 219:Src/stm32f1xx_it.c **** }
 259              		.loc 1 219 1 is_stmt 0 view .LVU30
 260 000e 08BD     		pop	{r3, pc}
 261              	.L21:
 262              		.align	2
 263              	.L20:
 264 0010 00000000 		.word	hdma_usart1_rx
 265 0014 00000000 		.word	hdma_usart1_tx
 266              		.cfi_endproc
 267              	.LFE536:
 269              		.section	.text.USART1_IRQHandler,"ax",%progbits
 270              		.align	1
 271              		.global	USART1_IRQHandler
 272              		.syntax unified
 273              		.thumb
 274              		.thumb_func
 275              		.fpu softvfp
 277              	USART1_IRQHandler:
 278              	.LFB537:
 220:Src/stm32f1xx_it.c **** 
 221:Src/stm32f1xx_it.c **** /**
 222:Src/stm32f1xx_it.c ****   * @brief This function handles USART1 global interrupt.
 223:Src/stm32f1xx_it.c ****   */
 224:Src/stm32f1xx_it.c **** void USART1_IRQHandler(void)
 225:Src/stm32f1xx_it.c **** {
 279              		.loc 1 225 1 is_stmt 1 view -0
 280              		.cfi_startproc
 281              		@ args = 0, pretend = 0, frame = 8
 282              		@ frame_needed = 0, uses_anonymous_args = 0
 283 0000 10B5     		push	{r4, lr}
 284              	.LCFI3:
 285              		.cfi_def_cfa_offset 8
 286              		.cfi_offset 4, -8
 287              		.cfi_offset 14, -4
 288 0002 82B0     		sub	sp, sp, #8
 289              	.LCFI4:
 290              		.cfi_def_cfa_offset 16
 226:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 227:Src/stm32f1xx_it.c **** 
 228:Src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 229:Src/stm32f1xx_it.c ****   HAL_UART_IRQHandler(&huart1);
 291              		.loc 1 229 3 view .LVU32
 292 0004 0A4C     		ldr	r4, .L26
 293 0006 2046     		mov	r0, r4
 294 0008 FFF7FEFF 		bl	HAL_UART_IRQHandler
 295              	.LVL4:
 230:Src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 1 */   
 231:Src/stm32f1xx_it.c ****   if (__HAL_UART_GET_FLAG (&huart1, UART_FLAG_IDLE))
 296              		.loc 1 231 3 view .LVU33
 297              		.loc 1 231 7 is_stmt 0 view .LVU34
 298 000c 2368     		ldr	r3, [r4]
 299 000e 1A68     		ldr	r2, [r3]
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s 			page 10


 300              		.loc 1 231 6 view .LVU35
 301 0010 12F0100F 		tst	r2, #16
 302 0014 01D1     		bne	.L25
 303              	.L22:
 232:Src/stm32f1xx_it.c ****   {
 233:Src/stm32f1xx_it.c ****     __HAL_UART_CLEAR_IDLEFLAG (&huart1); 
 234:Src/stm32f1xx_it.c ****     HAL_UART_RxCpltCallback (&huart1);   
 235:Src/stm32f1xx_it.c ****   }   
 236:Src/stm32f1xx_it.c **** 
 237:Src/stm32f1xx_it.c **** }
 304              		.loc 1 237 1 view .LVU36
 305 0016 02B0     		add	sp, sp, #8
 306              	.LCFI5:
 307              		.cfi_remember_state
 308              		.cfi_def_cfa_offset 8
 309              		@ sp needed
 310 0018 10BD     		pop	{r4, pc}
 311              	.L25:
 312              	.LCFI6:
 313              		.cfi_restore_state
 233:Src/stm32f1xx_it.c ****     HAL_UART_RxCpltCallback (&huart1);   
 314              		.loc 1 233 5 is_stmt 1 view .LVU37
 315              	.LBB2:
 233:Src/stm32f1xx_it.c ****     HAL_UART_RxCpltCallback (&huart1);   
 316              		.loc 1 233 5 view .LVU38
 317 001a 0022     		movs	r2, #0
 318 001c 0192     		str	r2, [sp, #4]
 233:Src/stm32f1xx_it.c ****     HAL_UART_RxCpltCallback (&huart1);   
 319              		.loc 1 233 5 view .LVU39
 320 001e 1A68     		ldr	r2, [r3]
 321 0020 0192     		str	r2, [sp, #4]
 233:Src/stm32f1xx_it.c ****     HAL_UART_RxCpltCallback (&huart1);   
 322              		.loc 1 233 5 view .LVU40
 323 0022 5B68     		ldr	r3, [r3, #4]
 324 0024 0193     		str	r3, [sp, #4]
 233:Src/stm32f1xx_it.c ****     HAL_UART_RxCpltCallback (&huart1);   
 325              		.loc 1 233 5 view .LVU41
 326 0026 019B     		ldr	r3, [sp, #4]
 327              	.LBE2:
 233:Src/stm32f1xx_it.c ****     HAL_UART_RxCpltCallback (&huart1);   
 328              		.loc 1 233 5 view .LVU42
 234:Src/stm32f1xx_it.c ****   }   
 329              		.loc 1 234 5 view .LVU43
 330 0028 2046     		mov	r0, r4
 331 002a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 332              	.LVL5:
 333              		.loc 1 237 1 is_stmt 0 view .LVU44
 334 002e F2E7     		b	.L22
 335              	.L27:
 336              		.align	2
 337              	.L26:
 338 0030 00000000 		.word	huart1
 339              		.cfi_endproc
 340              	.LFE537:
 342              		.text
 343              	.Letext0:
 344              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s 			page 11


 345              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 346              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 347              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 348              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 349              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 350              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 351              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 352              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 353              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 354              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 355              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\lib\\gcc\\arm-none-eab
 356              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 357              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 358              		.file 16 "Inc/queue.h"
 359              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h"
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_it.c
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:16     .text.NMI_Handler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:24     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:38     .text.HardFault_Handler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:45     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:69     .text.HardFault_Handler:0000000c $d
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:74     .text.MemManage_Handler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:81     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:98     .text.BusFault_Handler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:105    .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:122    .text.UsageFault_Handler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:129    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:146    .text.SVC_Handler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:153    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:166    .text.DebugMon_Handler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:173    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:186    .text.PendSV_Handler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:193    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:206    .text.SysTick_Handler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:213    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:233    .text.DMA1_Channel5_IRQHandler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:240    .text.DMA1_Channel5_IRQHandler:00000000 DMA1_Channel5_IRQHandler
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:264    .text.DMA1_Channel5_IRQHandler:00000010 $d
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:270    .text.USART1_IRQHandler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:277    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\Brandon\AppData\Local\Temp\ccBcdECr.s:338    .text.USART1_IRQHandler:00000030 $d

UNDEFINED SYMBOLS
isEmpty
message
HAL_IncTick
HAL_DMA_IRQHandler
hdma_usart1_rx
hdma_usart1_tx
HAL_UART_IRQHandler
HAL_UART_RxCpltCallback
huart1
