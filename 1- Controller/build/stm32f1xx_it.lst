ARM GAS  C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s 			page 1


   1              		.cpu cortex-m3
   2              		.eabi_attribute 20, 1
   3              		.eabi_attribute 21, 1
   4              		.eabi_attribute 23, 3
   5              		.eabi_attribute 24, 1
   6              		.eabi_attribute 25, 1
   7              		.eabi_attribute 26, 1
   8              		.eabi_attribute 30, 1
   9              		.eabi_attribute 34, 1
  10              		.eabi_attribute 18, 4
  11              		.file	"stm32f1xx_it.c"
  12              		.text
  13              	.Ltext0:
  14              		.cfi_sections	.debug_frame
  15              		.section	.text.NMI_Handler,"ax",%progbits
  16              		.align	1
  17              		.global	NMI_Handler
  18              		.arch armv7-m
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  22              		.fpu softvfp
  24              	NMI_Handler:
  25              	.LFB527:
  26              		.file 1 "Src/stm32f1xx_it.c"
   1:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Header */
   2:Src/stm32f1xx_it.c **** /**
   3:Src/stm32f1xx_it.c ****   ******************************************************************************
   4:Src/stm32f1xx_it.c ****   * @file    stm32f1xx_it.c
   5:Src/stm32f1xx_it.c ****   * @brief   Interrupt Service Routines.
   6:Src/stm32f1xx_it.c ****   ******************************************************************************
   7:Src/stm32f1xx_it.c ****   * @attention
   8:Src/stm32f1xx_it.c ****   *
   9:Src/stm32f1xx_it.c ****   * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  10:Src/stm32f1xx_it.c ****   * All rights reserved.</center></h2>
  11:Src/stm32f1xx_it.c ****   *
  12:Src/stm32f1xx_it.c ****   * This software component is licensed by ST under BSD 3-Clause license,
  13:Src/stm32f1xx_it.c ****   * the "License"; You may not use this file except in compliance with the
  14:Src/stm32f1xx_it.c ****   * License. You may obtain a copy of the License at:
  15:Src/stm32f1xx_it.c ****   *                        opensource.org/licenses/BSD-3-Clause
  16:Src/stm32f1xx_it.c ****   *
  17:Src/stm32f1xx_it.c ****   ******************************************************************************
  18:Src/stm32f1xx_it.c ****   */
  19:Src/stm32f1xx_it.c **** /* USER CODE END Header */
  20:Src/stm32f1xx_it.c **** 
  21:Src/stm32f1xx_it.c **** /* Includes ------------------------------------------------------------------*/
  22:Src/stm32f1xx_it.c **** #include "main.h"
  23:Src/stm32f1xx_it.c **** #include "queue.h"
  24:Src/stm32f1xx_it.c **** #include "stm32f1xx_it.h"
  25:Src/stm32f1xx_it.c **** /* Private includes ----------------------------------------------------------*/
  26:Src/stm32f1xx_it.c **** /* USER CODE BEGIN Includes */
  27:Src/stm32f1xx_it.c **** /* USER CODE END Includes */
  28:Src/stm32f1xx_it.c **** 
  29:Src/stm32f1xx_it.c **** /* Private typedef -----------------------------------------------------------*/
  30:Src/stm32f1xx_it.c **** /* USER CODE BEGIN TD */
  31:Src/stm32f1xx_it.c **** 
  32:Src/stm32f1xx_it.c **** /* USER CODE END TD */
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s 			page 2


  33:Src/stm32f1xx_it.c **** 
  34:Src/stm32f1xx_it.c **** /* Private define ------------------------------------------------------------*/
  35:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PD */
  36:Src/stm32f1xx_it.c ****  
  37:Src/stm32f1xx_it.c **** /* USER CODE END PD */
  38:Src/stm32f1xx_it.c **** 
  39:Src/stm32f1xx_it.c **** /* Private macro -------------------------------------------------------------*/
  40:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PM */
  41:Src/stm32f1xx_it.c **** 
  42:Src/stm32f1xx_it.c **** /* USER CODE END PM */
  43:Src/stm32f1xx_it.c **** 
  44:Src/stm32f1xx_it.c **** /* Private variables ---------------------------------------------------------*/
  45:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PV */
  46:Src/stm32f1xx_it.c **** 
  47:Src/stm32f1xx_it.c **** /* USER CODE END PV */
  48:Src/stm32f1xx_it.c **** 
  49:Src/stm32f1xx_it.c **** /* Private function prototypes -----------------------------------------------*/
  50:Src/stm32f1xx_it.c **** /* USER CODE BEGIN PFP */
  51:Src/stm32f1xx_it.c **** 
  52:Src/stm32f1xx_it.c **** /* USER CODE END PFP */
  53:Src/stm32f1xx_it.c **** 
  54:Src/stm32f1xx_it.c **** /* Private user code ---------------------------------------------------------*/
  55:Src/stm32f1xx_it.c **** /* USER CODE BEGIN 0 */
  56:Src/stm32f1xx_it.c **** 
  57:Src/stm32f1xx_it.c **** /* USER CODE END 0 */
  58:Src/stm32f1xx_it.c **** 
  59:Src/stm32f1xx_it.c **** /* External variables --------------------------------------------------------*/
  60:Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_rx;
  61:Src/stm32f1xx_it.c **** extern DMA_HandleTypeDef hdma_usart1_tx;
  62:Src/stm32f1xx_it.c **** extern UART_HandleTypeDef huart1;
  63:Src/stm32f1xx_it.c **** extern MessageQueue *message;
  64:Src/stm32f1xx_it.c **** /* USER CODE BEGIN EV */
  65:Src/stm32f1xx_it.c **** 
  66:Src/stm32f1xx_it.c **** /* USER CODE END EV */
  67:Src/stm32f1xx_it.c **** 
  68:Src/stm32f1xx_it.c **** /******************************************************************************/
  69:Src/stm32f1xx_it.c **** /*           Cortex-M3 Processor Interruption and Exception Handlers          */ 
  70:Src/stm32f1xx_it.c **** /******************************************************************************/
  71:Src/stm32f1xx_it.c **** /**
  72:Src/stm32f1xx_it.c ****   * @brief This function handles Non maskable interrupt.
  73:Src/stm32f1xx_it.c ****   */
  74:Src/stm32f1xx_it.c **** void NMI_Handler(void)
  75:Src/stm32f1xx_it.c **** {
  27              		.loc 1 75 1 view -0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  76:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 0 */
  77:Src/stm32f1xx_it.c **** 
  78:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 0 */
  79:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  80:Src/stm32f1xx_it.c **** 
  81:Src/stm32f1xx_it.c ****   /* USER CODE END NonMaskableInt_IRQn 1 */
  82:Src/stm32f1xx_it.c **** }
  32              		.loc 1 82 1 view .LVU1
  33 0000 7047     		bx	lr
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s 			page 3


  34              		.cfi_endproc
  35              	.LFE527:
  37              		.section	.text.HardFault_Handler,"ax",%progbits
  38              		.align	1
  39              		.global	HardFault_Handler
  40              		.syntax unified
  41              		.thumb
  42              		.thumb_func
  43              		.fpu softvfp
  45              	HardFault_Handler:
  46              	.LFB528:
  83:Src/stm32f1xx_it.c **** 
  84:Src/stm32f1xx_it.c **** /**
  85:Src/stm32f1xx_it.c ****   * @brief This function handles Hard fault interrupt.
  86:Src/stm32f1xx_it.c ****   */
  87:Src/stm32f1xx_it.c **** void HardFault_Handler(void)
  88:Src/stm32f1xx_it.c **** {
  47              		.loc 1 88 1 view -0
  48              		.cfi_startproc
  49              		@ Volatile: function does not return.
  50              		@ args = 0, pretend = 0, frame = 0
  51              		@ frame_needed = 0, uses_anonymous_args = 0
  52 0000 08B5     		push	{r3, lr}
  53              	.LCFI0:
  54              		.cfi_def_cfa_offset 8
  55              		.cfi_offset 3, -8
  56              		.cfi_offset 14, -4
  57              	.L3:
  89:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN HardFault_IRQn 0 */
  90:Src/stm32f1xx_it.c **** 
  91:Src/stm32f1xx_it.c ****   /* USER CODE END HardFault_IRQn 0 */
  92:Src/stm32f1xx_it.c ****   while (1)
  58              		.loc 1 92 3 discriminator 1 view .LVU3
  93:Src/stm32f1xx_it.c ****   {
  94:Src/stm32f1xx_it.c ****     isEmpty(message);
  59              		.loc 1 94 5 discriminator 1 view .LVU4
  60 0002 034B     		ldr	r3, .L5
  61 0004 1868     		ldr	r0, [r3]
  62 0006 FFF7FEFF 		bl	isEmpty
  63              	.LVL0:
  95:Src/stm32f1xx_it.c ****     Error_Handler();
  64              		.loc 1 95 5 discriminator 1 view .LVU5
  65 000a FFF7FEFF 		bl	Error_Handler
  66              	.LVL1:
  92:Src/stm32f1xx_it.c ****   {
  67              		.loc 1 92 9 discriminator 1 view .LVU6
  68 000e F8E7     		b	.L3
  69              	.L6:
  70              		.align	2
  71              	.L5:
  72 0010 00000000 		.word	message
  73              		.cfi_endproc
  74              	.LFE528:
  76              		.section	.text.MemManage_Handler,"ax",%progbits
  77              		.align	1
  78              		.global	MemManage_Handler
  79              		.syntax unified
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s 			page 4


  80              		.thumb
  81              		.thumb_func
  82              		.fpu softvfp
  84              	MemManage_Handler:
  85              	.LFB529:
  96:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_HardFault_IRQn 0 */
  97:Src/stm32f1xx_it.c ****     /* USER CODE END W1_HardFault_IRQn 0 */
  98:Src/stm32f1xx_it.c ****   }
  99:Src/stm32f1xx_it.c **** }
 100:Src/stm32f1xx_it.c **** 
 101:Src/stm32f1xx_it.c **** /**
 102:Src/stm32f1xx_it.c ****   * @brief This function handles Memory management fault.
 103:Src/stm32f1xx_it.c ****   */
 104:Src/stm32f1xx_it.c **** void MemManage_Handler(void)
 105:Src/stm32f1xx_it.c **** {
  86              		.loc 1 105 1 view -0
  87              		.cfi_startproc
  88              		@ Volatile: function does not return.
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
  92              	.L8:
 106:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN MemoryManagement_IRQn 0 */
 107:Src/stm32f1xx_it.c **** 
 108:Src/stm32f1xx_it.c ****   /* USER CODE END MemoryManagement_IRQn 0 */
 109:Src/stm32f1xx_it.c ****   while (1)
  93              		.loc 1 109 3 discriminator 1 view .LVU8
 110:Src/stm32f1xx_it.c ****   {
 111:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_MemoryManagement_IRQn 0 */
 112:Src/stm32f1xx_it.c ****     /* USER CODE END W1_MemoryManagement_IRQn 0 */
 113:Src/stm32f1xx_it.c ****   }
  94              		.loc 1 113 3 discriminator 1 view .LVU9
 109:Src/stm32f1xx_it.c ****   {
  95              		.loc 1 109 9 discriminator 1 view .LVU10
  96 0000 FEE7     		b	.L8
  97              		.cfi_endproc
  98              	.LFE529:
 100              		.section	.text.BusFault_Handler,"ax",%progbits
 101              		.align	1
 102              		.global	BusFault_Handler
 103              		.syntax unified
 104              		.thumb
 105              		.thumb_func
 106              		.fpu softvfp
 108              	BusFault_Handler:
 109              	.LFB530:
 114:Src/stm32f1xx_it.c **** }
 115:Src/stm32f1xx_it.c **** 
 116:Src/stm32f1xx_it.c **** /**
 117:Src/stm32f1xx_it.c ****   * @brief This function handles Prefetch fault, memory access fault.
 118:Src/stm32f1xx_it.c ****   */
 119:Src/stm32f1xx_it.c **** void BusFault_Handler(void)
 120:Src/stm32f1xx_it.c **** {
 110              		.loc 1 120 1 view -0
 111              		.cfi_startproc
 112              		@ Volatile: function does not return.
 113              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s 			page 5


 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 116              	.L10:
 121:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN BusFault_IRQn 0 */
 122:Src/stm32f1xx_it.c **** 
 123:Src/stm32f1xx_it.c ****   /* USER CODE END BusFault_IRQn 0 */
 124:Src/stm32f1xx_it.c ****   while (1)
 117              		.loc 1 124 3 discriminator 1 view .LVU12
 125:Src/stm32f1xx_it.c ****   {
 126:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_BusFault_IRQn 0 */
 127:Src/stm32f1xx_it.c ****     /* USER CODE END W1_BusFault_IRQn 0 */
 128:Src/stm32f1xx_it.c ****   }
 118              		.loc 1 128 3 discriminator 1 view .LVU13
 124:Src/stm32f1xx_it.c ****   {
 119              		.loc 1 124 9 discriminator 1 view .LVU14
 120 0000 FEE7     		b	.L10
 121              		.cfi_endproc
 122              	.LFE530:
 124              		.section	.text.UsageFault_Handler,"ax",%progbits
 125              		.align	1
 126              		.global	UsageFault_Handler
 127              		.syntax unified
 128              		.thumb
 129              		.thumb_func
 130              		.fpu softvfp
 132              	UsageFault_Handler:
 133              	.LFB531:
 129:Src/stm32f1xx_it.c **** }
 130:Src/stm32f1xx_it.c **** 
 131:Src/stm32f1xx_it.c **** /**
 132:Src/stm32f1xx_it.c ****   * @brief This function handles Undefined instruction or illegal state.
 133:Src/stm32f1xx_it.c ****   */
 134:Src/stm32f1xx_it.c **** void UsageFault_Handler(void)
 135:Src/stm32f1xx_it.c **** {
 134              		.loc 1 135 1 view -0
 135              		.cfi_startproc
 136              		@ Volatile: function does not return.
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 0, uses_anonymous_args = 0
 139              		@ link register save eliminated.
 140              	.L12:
 136:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN UsageFault_IRQn 0 */
 137:Src/stm32f1xx_it.c **** 
 138:Src/stm32f1xx_it.c ****   /* USER CODE END UsageFault_IRQn 0 */
 139:Src/stm32f1xx_it.c ****   while (1)
 141              		.loc 1 139 3 discriminator 1 view .LVU16
 140:Src/stm32f1xx_it.c ****   {
 141:Src/stm32f1xx_it.c ****     /* USER CODE BEGIN W1_UsageFault_IRQn 0 */
 142:Src/stm32f1xx_it.c ****     /* USER CODE END W1_UsageFault_IRQn 0 */
 143:Src/stm32f1xx_it.c ****   }
 142              		.loc 1 143 3 discriminator 1 view .LVU17
 139:Src/stm32f1xx_it.c ****   {
 143              		.loc 1 139 9 discriminator 1 view .LVU18
 144 0000 FEE7     		b	.L12
 145              		.cfi_endproc
 146              	.LFE531:
 148              		.section	.text.SVC_Handler,"ax",%progbits
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s 			page 6


 149              		.align	1
 150              		.global	SVC_Handler
 151              		.syntax unified
 152              		.thumb
 153              		.thumb_func
 154              		.fpu softvfp
 156              	SVC_Handler:
 157              	.LFB532:
 144:Src/stm32f1xx_it.c **** }
 145:Src/stm32f1xx_it.c **** 
 146:Src/stm32f1xx_it.c **** /**
 147:Src/stm32f1xx_it.c ****   * @brief This function handles System service call via SWI instruction.
 148:Src/stm32f1xx_it.c ****   */
 149:Src/stm32f1xx_it.c **** void SVC_Handler(void)
 150:Src/stm32f1xx_it.c **** {
 158              		.loc 1 150 1 view -0
 159              		.cfi_startproc
 160              		@ args = 0, pretend = 0, frame = 0
 161              		@ frame_needed = 0, uses_anonymous_args = 0
 162              		@ link register save eliminated.
 151:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 0 */
 152:Src/stm32f1xx_it.c **** 
 153:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 0 */
 154:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SVCall_IRQn 1 */
 155:Src/stm32f1xx_it.c **** 
 156:Src/stm32f1xx_it.c ****   /* USER CODE END SVCall_IRQn 1 */
 157:Src/stm32f1xx_it.c **** }
 163              		.loc 1 157 1 view .LVU20
 164 0000 7047     		bx	lr
 165              		.cfi_endproc
 166              	.LFE532:
 168              		.section	.text.DebugMon_Handler,"ax",%progbits
 169              		.align	1
 170              		.global	DebugMon_Handler
 171              		.syntax unified
 172              		.thumb
 173              		.thumb_func
 174              		.fpu softvfp
 176              	DebugMon_Handler:
 177              	.LFB533:
 158:Src/stm32f1xx_it.c **** 
 159:Src/stm32f1xx_it.c **** /**
 160:Src/stm32f1xx_it.c ****   * @brief This function handles Debug monitor.
 161:Src/stm32f1xx_it.c ****   */
 162:Src/stm32f1xx_it.c **** void DebugMon_Handler(void)
 163:Src/stm32f1xx_it.c **** {
 178              		.loc 1 163 1 view -0
 179              		.cfi_startproc
 180              		@ args = 0, pretend = 0, frame = 0
 181              		@ frame_needed = 0, uses_anonymous_args = 0
 182              		@ link register save eliminated.
 164:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 0 */
 165:Src/stm32f1xx_it.c **** 
 166:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 0 */
 167:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DebugMonitor_IRQn 1 */
 168:Src/stm32f1xx_it.c **** 
 169:Src/stm32f1xx_it.c ****   /* USER CODE END DebugMonitor_IRQn 1 */
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s 			page 7


 170:Src/stm32f1xx_it.c **** }
 183              		.loc 1 170 1 view .LVU22
 184 0000 7047     		bx	lr
 185              		.cfi_endproc
 186              	.LFE533:
 188              		.section	.text.PendSV_Handler,"ax",%progbits
 189              		.align	1
 190              		.global	PendSV_Handler
 191              		.syntax unified
 192              		.thumb
 193              		.thumb_func
 194              		.fpu softvfp
 196              	PendSV_Handler:
 197              	.LFB534:
 171:Src/stm32f1xx_it.c **** 
 172:Src/stm32f1xx_it.c **** /**
 173:Src/stm32f1xx_it.c ****   * @brief This function handles Pendable request for system service.
 174:Src/stm32f1xx_it.c ****   */
 175:Src/stm32f1xx_it.c **** void PendSV_Handler(void)
 176:Src/stm32f1xx_it.c **** {
 198              		.loc 1 176 1 view -0
 199              		.cfi_startproc
 200              		@ args = 0, pretend = 0, frame = 0
 201              		@ frame_needed = 0, uses_anonymous_args = 0
 202              		@ link register save eliminated.
 177:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 0 */
 178:Src/stm32f1xx_it.c **** 
 179:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 0 */
 180:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN PendSV_IRQn 1 */
 181:Src/stm32f1xx_it.c **** 
 182:Src/stm32f1xx_it.c ****   /* USER CODE END PendSV_IRQn 1 */
 183:Src/stm32f1xx_it.c **** }
 203              		.loc 1 183 1 view .LVU24
 204 0000 7047     		bx	lr
 205              		.cfi_endproc
 206              	.LFE534:
 208              		.section	.text.SysTick_Handler,"ax",%progbits
 209              		.align	1
 210              		.global	SysTick_Handler
 211              		.syntax unified
 212              		.thumb
 213              		.thumb_func
 214              		.fpu softvfp
 216              	SysTick_Handler:
 217              	.LFB535:
 184:Src/stm32f1xx_it.c **** 
 185:Src/stm32f1xx_it.c **** /**
 186:Src/stm32f1xx_it.c ****   * @brief This function handles System tick timer.
 187:Src/stm32f1xx_it.c ****   */
 188:Src/stm32f1xx_it.c **** void SysTick_Handler(void)
 189:Src/stm32f1xx_it.c **** {
 218              		.loc 1 189 1 view -0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 0
 221              		@ frame_needed = 0, uses_anonymous_args = 0
 222 0000 08B5     		push	{r3, lr}
 223              	.LCFI1:
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s 			page 8


 224              		.cfi_def_cfa_offset 8
 225              		.cfi_offset 3, -8
 226              		.cfi_offset 14, -4
 190:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 0 */
 191:Src/stm32f1xx_it.c ****   
 192:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 0 */
 193:Src/stm32f1xx_it.c ****   HAL_IncTick();
 227              		.loc 1 193 3 view .LVU26
 228 0002 FFF7FEFF 		bl	HAL_IncTick
 229              	.LVL2:
 194:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN SysTick_IRQn 1 */
 195:Src/stm32f1xx_it.c **** 
 196:Src/stm32f1xx_it.c ****   /* USER CODE END SysTick_IRQn 1 */
 197:Src/stm32f1xx_it.c **** }
 230              		.loc 1 197 1 is_stmt 0 view .LVU27
 231 0006 08BD     		pop	{r3, pc}
 232              		.cfi_endproc
 233              	.LFE535:
 235              		.section	.text.DMA1_Channel4_IRQHandler,"ax",%progbits
 236              		.align	1
 237              		.global	DMA1_Channel4_IRQHandler
 238              		.syntax unified
 239              		.thumb
 240              		.thumb_func
 241              		.fpu softvfp
 243              	DMA1_Channel4_IRQHandler:
 244              	.LFB536:
 198:Src/stm32f1xx_it.c **** 
 199:Src/stm32f1xx_it.c **** /******************************************************************************/
 200:Src/stm32f1xx_it.c **** /* STM32F1xx Peripheral Interrupt Handlers                                    */
 201:Src/stm32f1xx_it.c **** /* Add here the Interrupt Handlers for the used peripherals.                  */
 202:Src/stm32f1xx_it.c **** /* For the available peripheral interrupt handler names,                      */
 203:Src/stm32f1xx_it.c **** /* please refer to the startup file (startup_stm32f1xx.s).                    */
 204:Src/stm32f1xx_it.c **** /******************************************************************************/
 205:Src/stm32f1xx_it.c **** 
 206:Src/stm32f1xx_it.c **** /**
 207:Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel4 global interrupt.
 208:Src/stm32f1xx_it.c ****   */
 209:Src/stm32f1xx_it.c **** void DMA1_Channel4_IRQHandler(void)
 210:Src/stm32f1xx_it.c **** {
 245              		.loc 1 210 1 is_stmt 1 view -0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 0, uses_anonymous_args = 0
 249 0000 08B5     		push	{r3, lr}
 250              	.LCFI2:
 251              		.cfi_def_cfa_offset 8
 252              		.cfi_offset 3, -8
 253              		.cfi_offset 14, -4
 211:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 0 */
 212:Src/stm32f1xx_it.c **** 
 213:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 0 */
 214:Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_tx);
 254              		.loc 1 214 3 view .LVU29
 255 0002 0248     		ldr	r0, .L20
 256 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 257              	.LVL3:
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s 			page 9


 215:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel4_IRQn 1 */
 216:Src/stm32f1xx_it.c **** 
 217:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel4_IRQn 1 */
 218:Src/stm32f1xx_it.c **** }
 258              		.loc 1 218 1 is_stmt 0 view .LVU30
 259 0008 08BD     		pop	{r3, pc}
 260              	.L21:
 261 000a 00BF     		.align	2
 262              	.L20:
 263 000c 00000000 		.word	hdma_usart1_tx
 264              		.cfi_endproc
 265              	.LFE536:
 267              		.section	.text.DMA1_Channel5_IRQHandler,"ax",%progbits
 268              		.align	1
 269              		.global	DMA1_Channel5_IRQHandler
 270              		.syntax unified
 271              		.thumb
 272              		.thumb_func
 273              		.fpu softvfp
 275              	DMA1_Channel5_IRQHandler:
 276              	.LFB537:
 219:Src/stm32f1xx_it.c **** 
 220:Src/stm32f1xx_it.c **** /**
 221:Src/stm32f1xx_it.c ****   * @brief This function handles DMA1 channel5 global interrupt.
 222:Src/stm32f1xx_it.c ****   */
 223:Src/stm32f1xx_it.c **** void DMA1_Channel5_IRQHandler(void)
 224:Src/stm32f1xx_it.c **** {
 277              		.loc 1 224 1 is_stmt 1 view -0
 278              		.cfi_startproc
 279              		@ args = 0, pretend = 0, frame = 0
 280              		@ frame_needed = 0, uses_anonymous_args = 0
 281 0000 08B5     		push	{r3, lr}
 282              	.LCFI3:
 283              		.cfi_def_cfa_offset 8
 284              		.cfi_offset 3, -8
 285              		.cfi_offset 14, -4
 225:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 0 */
 226:Src/stm32f1xx_it.c **** 
 227:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 0 */
 228:Src/stm32f1xx_it.c ****   HAL_DMA_IRQHandler(&hdma_usart1_rx);
 286              		.loc 1 228 3 view .LVU32
 287 0002 0248     		ldr	r0, .L24
 288 0004 FFF7FEFF 		bl	HAL_DMA_IRQHandler
 289              	.LVL4:
 229:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN DMA1_Channel5_IRQn 1 */
 230:Src/stm32f1xx_it.c **** 
 231:Src/stm32f1xx_it.c ****   /* USER CODE END DMA1_Channel5_IRQn 1 */
 232:Src/stm32f1xx_it.c **** }
 290              		.loc 1 232 1 is_stmt 0 view .LVU33
 291 0008 08BD     		pop	{r3, pc}
 292              	.L25:
 293 000a 00BF     		.align	2
 294              	.L24:
 295 000c 00000000 		.word	hdma_usart1_rx
 296              		.cfi_endproc
 297              	.LFE537:
 299              		.section	.text.USART1_IRQHandler,"ax",%progbits
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s 			page 10


 300              		.align	1
 301              		.global	USART1_IRQHandler
 302              		.syntax unified
 303              		.thumb
 304              		.thumb_func
 305              		.fpu softvfp
 307              	USART1_IRQHandler:
 308              	.LFB538:
 233:Src/stm32f1xx_it.c **** 
 234:Src/stm32f1xx_it.c **** /**
 235:Src/stm32f1xx_it.c ****   * @brief This function handles USART1 global interrupt.
 236:Src/stm32f1xx_it.c ****   */
 237:Src/stm32f1xx_it.c **** void USART1_IRQHandler(void)
 238:Src/stm32f1xx_it.c **** {
 309              		.loc 1 238 1 is_stmt 1 view -0
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 8
 312              		@ frame_needed = 0, uses_anonymous_args = 0
 313 0000 00B5     		push	{lr}
 314              	.LCFI4:
 315              		.cfi_def_cfa_offset 4
 316              		.cfi_offset 14, -4
 317 0002 83B0     		sub	sp, sp, #12
 318              	.LCFI5:
 319              		.cfi_def_cfa_offset 16
 239:Src/stm32f1xx_it.c ****   /* USER CODE BEGIN USART1_IRQn 0 */
 240:Src/stm32f1xx_it.c **** 
 241:Src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 0 */
 242:Src/stm32f1xx_it.c ****   //HAL_UART_IRQHandler(&huart1);
 243:Src/stm32f1xx_it.c ****   /* USER CODE END USART1_IRQn 1 */   
 244:Src/stm32f1xx_it.c ****   if (__HAL_UART_GET_FLAG (&huart1, UART_FLAG_IDLE))
 320              		.loc 1 244 3 view .LVU35
 321              		.loc 1 244 7 is_stmt 0 view .LVU36
 322 0004 0A4B     		ldr	r3, .L30
 323 0006 1B68     		ldr	r3, [r3]
 324 0008 1B68     		ldr	r3, [r3]
 325              		.loc 1 244 6 view .LVU37
 326 000a 13F0100F 		tst	r3, #16
 327 000e 0BD1     		bne	.L29
 328              	.L27:
 245:Src/stm32f1xx_it.c ****   {
 246:Src/stm32f1xx_it.c ****     
 247:Src/stm32f1xx_it.c ****     HAL_UART_RxCpltCallback (&huart1);   
 248:Src/stm32f1xx_it.c ****     
 249:Src/stm32f1xx_it.c ****   }
 250:Src/stm32f1xx_it.c ****   __HAL_UART_CLEAR_IDLEFLAG (&huart1);
 329              		.loc 1 250 3 is_stmt 1 view .LVU38
 330              	.LBB2:
 331              		.loc 1 250 3 view .LVU39
 332 0010 0023     		movs	r3, #0
 333 0012 0193     		str	r3, [sp, #4]
 334              		.loc 1 250 3 view .LVU40
 335 0014 064B     		ldr	r3, .L30
 336 0016 1B68     		ldr	r3, [r3]
 337 0018 1A68     		ldr	r2, [r3]
 338 001a 0192     		str	r2, [sp, #4]
 339              		.loc 1 250 3 view .LVU41
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s 			page 11


 340 001c 5B68     		ldr	r3, [r3, #4]
 341 001e 0193     		str	r3, [sp, #4]
 342              		.loc 1 250 3 view .LVU42
 343 0020 019B     		ldr	r3, [sp, #4]
 344              	.LBE2:
 345              		.loc 1 250 3 view .LVU43
 251:Src/stm32f1xx_it.c ****   
 252:Src/stm32f1xx_it.c **** 
 253:Src/stm32f1xx_it.c **** }
 346              		.loc 1 253 1 is_stmt 0 view .LVU44
 347 0022 03B0     		add	sp, sp, #12
 348              	.LCFI6:
 349              		.cfi_remember_state
 350              		.cfi_def_cfa_offset 4
 351              		@ sp needed
 352 0024 5DF804FB 		ldr	pc, [sp], #4
 353              	.L29:
 354              	.LCFI7:
 355              		.cfi_restore_state
 247:Src/stm32f1xx_it.c ****     
 356              		.loc 1 247 5 is_stmt 1 view .LVU45
 357 0028 0148     		ldr	r0, .L30
 358 002a FFF7FEFF 		bl	HAL_UART_RxCpltCallback
 359              	.LVL5:
 360 002e EFE7     		b	.L27
 361              	.L31:
 362              		.align	2
 363              	.L30:
 364 0030 00000000 		.word	huart1
 365              		.cfi_endproc
 366              	.LFE538:
 368              		.text
 369              	.Letext0:
 370              		.file 2 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 371              		.file 3 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include\
 372              		.file 4 "Drivers/CMSIS/Include/core_cm3.h"
 373              		.file 5 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 374              		.file 6 "Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 375              		.file 7 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 376              		.file 8 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 377              		.file 9 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_uart.h"
 378              		.file 10 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 379              		.file 11 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 380              		.file 12 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 381              		.file 13 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\lib\\gcc\\arm-none-eab
 382              		.file 14 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 383              		.file 15 "c:\\program files (x86)\\gnu tools arm embedded\\9 2019-q4-major\\arm-none-eabi\\include
 384              		.file 16 "Inc/queue.h"
 385              		.file 17 "Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_ll_dma.h"
 386              		.file 18 "Inc/main.h"
ARM GAS  C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s 			page 12


DEFINED SYMBOLS
                            *ABS*:00000000 stm32f1xx_it.c
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:16     .text.NMI_Handler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:24     .text.NMI_Handler:00000000 NMI_Handler
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:38     .text.HardFault_Handler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:45     .text.HardFault_Handler:00000000 HardFault_Handler
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:72     .text.HardFault_Handler:00000010 $d
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:77     .text.MemManage_Handler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:84     .text.MemManage_Handler:00000000 MemManage_Handler
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:101    .text.BusFault_Handler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:108    .text.BusFault_Handler:00000000 BusFault_Handler
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:125    .text.UsageFault_Handler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:132    .text.UsageFault_Handler:00000000 UsageFault_Handler
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:149    .text.SVC_Handler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:156    .text.SVC_Handler:00000000 SVC_Handler
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:169    .text.DebugMon_Handler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:176    .text.DebugMon_Handler:00000000 DebugMon_Handler
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:189    .text.PendSV_Handler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:196    .text.PendSV_Handler:00000000 PendSV_Handler
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:209    .text.SysTick_Handler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:216    .text.SysTick_Handler:00000000 SysTick_Handler
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:236    .text.DMA1_Channel4_IRQHandler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:243    .text.DMA1_Channel4_IRQHandler:00000000 DMA1_Channel4_IRQHandler
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:263    .text.DMA1_Channel4_IRQHandler:0000000c $d
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:268    .text.DMA1_Channel5_IRQHandler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:275    .text.DMA1_Channel5_IRQHandler:00000000 DMA1_Channel5_IRQHandler
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:295    .text.DMA1_Channel5_IRQHandler:0000000c $d
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:300    .text.USART1_IRQHandler:00000000 $t
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:307    .text.USART1_IRQHandler:00000000 USART1_IRQHandler
C:\Users\Brandon\AppData\Local\Temp\cc9xZtBW.s:364    .text.USART1_IRQHandler:00000030 $d

UNDEFINED SYMBOLS
isEmpty
Error_Handler
message
HAL_IncTick
HAL_DMA_IRQHandler
hdma_usart1_tx
hdma_usart1_rx
HAL_UART_RxCpltCallback
huart1
